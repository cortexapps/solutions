{
	"info": {
		"_postman_id": "a5f0ab73-8722-403d-b157-263d8b97d75a",
		"name": "Cortex API",
		"description": "The Cortex REST API provides programmatic access to the data in the catalog, Scorecards, and more.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22427166"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "teams",
							"item": [
								{
									"name": "{teamTag}",
									"item": [
										{
											"name": "unarchive",
											"item": [
												{
													"name": "Unarchive team",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/teams/:teamTag/unarchive",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"teams",
																":teamTag",
																"unarchive"
															],
															"variable": [
																{
																	"key": "teamTag",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully unarchived team",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/teams/:teamTag/unarchive",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"teams",
																		":teamTag",
																		"unarchive"
																	],
																	"variable": [
																		{
																			"key": "teamTag"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"additionalMembers\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"isArchived\": \"<boolean>\",\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"summary\": \"<string>\"\n  },\n  \"slackChannels\": [\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    }\n  ],\n  \"teamTag\": \"<string>\",\n  \"type\": \"<string>\"\n}"
														},
														{
															"name": "Team not found",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/teams/:teamTag/unarchive",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"teams",
																		":teamTag",
																		"unarchive"
																	],
																	"variable": [
																		{
																			"key": "teamTag"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "members",
											"item": [
												{
													"name": "[Cortex managed teams] Update members in team",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"type\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/teams/:teamTag/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"teams",
																":teamTag",
																"members"
															],
															"variable": [
																{
																	"key": "teamTag",
																	"value": "<string>"
																}
															]
														},
														"description": "For teams whose members are not backed by an IdP, use this API to update the team members. Note that it will replace the members in the team with the members defined in this request. \nThis API should only be used if your team identifier contains non-alphanumeric characters. Otherwise, use the standard API under `Teams`."
													},
													"response": [
														{
															"name": "Successfully updated team members",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"type\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/teams/:teamTag/members",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"teams",
																		":teamTag",
																		"members"
																	],
																	"variable": [
																		{
																			"key": "teamTag"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"additionalMembers\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"isArchived\": \"<boolean>\",\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"summary\": \"<string>\"\n  },\n  \"slackChannels\": [\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    }\n  ],\n  \"teamTag\": \"<string>\",\n  \"type\": \"<string>\"\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"type\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/teams/:teamTag/members",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"teams",
																		":teamTag",
																		"members"
																	],
																	"variable": [
																		{
																			"key": "teamTag"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														},
														{
															"name": "Team not found",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"type\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/teams/:teamTag/members",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"teams",
																		":teamTag",
																		"members"
																	],
																	"variable": [
																		{
																			"key": "teamTag"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "archive",
											"item": [
												{
													"name": "Archive team",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/teams/:teamTag/archive",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"teams",
																":teamTag",
																"archive"
															],
															"variable": [
																{
																	"key": "teamTag",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully archived team",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/teams/:teamTag/archive",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"teams",
																		":teamTag",
																		"archive"
																	],
																	"variable": [
																		{
																			"key": "teamTag"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"additionalMembers\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"isArchived\": \"<boolean>\",\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"summary\": \"<string>\"\n  },\n  \"slackChannels\": [\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    }\n  ],\n  \"teamTag\": \"<string>\",\n  \"type\": \"<string>\"\n}"
														},
														{
															"name": "Team not found",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/teams/:teamTag/archive",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"teams",
																		":teamTag",
																		"archive"
																	],
																	"variable": [
																		{
																			"key": "teamTag"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Retrieve team details",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/teams/:teamTag",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"teams",
														":teamTag"
													],
													"variable": [
														{
															"key": "teamTag",
															"value": "<string>"
														}
													]
												}
											},
											"response": [
												{
													"name": "Successfully found team",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/teams/:teamTag",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"teams",
																":teamTag"
															],
															"variable": [
																{
																	"key": "teamTag"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"additionalMembers\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"isArchived\": \"<boolean>\",\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"summary\": \"<string>\"\n  },\n  \"slackChannels\": [\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    }\n  ],\n  \"teamTag\": \"<string>\",\n  \"type\": \"<string>\"\n}"
												},
												{
													"name": "Team not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/teams/:teamTag",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"teams",
																":teamTag"
															],
															"variable": [
																{
																	"key": "teamTag"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Update team metadata",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"additionalMembers\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"summary\": \"<string>\"\n  },\n  \"slackChannels\": [\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    }\n  ],\n  \"type\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/teams/:teamTag",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"teams",
														":teamTag"
													],
													"variable": [
														{
															"key": "teamTag",
															"value": "<string>"
														}
													]
												}
											},
											"response": [
												{
													"name": "Successfully updated team",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"additionalMembers\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"summary\": \"<string>\"\n  },\n  \"slackChannels\": [\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    }\n  ],\n  \"type\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/teams/:teamTag",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"teams",
																":teamTag"
															],
															"variable": [
																{
																	"key": "teamTag"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"additionalMembers\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"isArchived\": \"<boolean>\",\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"summary\": \"<string>\"\n  },\n  \"slackChannels\": [\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    }\n  ],\n  \"teamTag\": \"<string>\",\n  \"type\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"additionalMembers\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"summary\": \"<string>\"\n  },\n  \"slackChannels\": [\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    }\n  ],\n  \"type\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/teams/:teamTag",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"teams",
																":teamTag"
															],
															"variable": [
																{
																	"key": "teamTag"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												},
												{
													"name": "Team not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"additionalMembers\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"summary\": \"<string>\"\n  },\n  \"slackChannels\": [\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    }\n  ],\n  \"type\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/teams/:teamTag",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"teams",
																":teamTag"
															],
															"variable": [
																{
																	"key": "teamTag"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "relationships",
									"item": [
										{
											"name": "Retrieve team relationships",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/teams/relationships",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"teams",
														"relationships"
													]
												}
											},
											"response": [
												{
													"name": "Successfully found team relationships",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/teams/relationships",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"teams",
																"relationships"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"edges\": [\n    {\n      \"childTeamTag\": \"<string>\",\n      \"parentTeamTag\": \"<string>\"\n    },\n    {\n      \"childTeamTag\": \"<string>\",\n      \"parentTeamTag\": \"<string>\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Replace all relationships",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"edges\": [\n    {\n      \"childTeamTag\": \"<string>\",\n      \"parentTeamTag\": \"<string>\"\n    },\n    {\n      \"childTeamTag\": \"<string>\",\n      \"parentTeamTag\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/teams/relationships",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"teams",
														"relationships"
													]
												}
											},
											"response": [
												{
													"name": "Successfully created team relationships",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"edges\": [\n    {\n      \"childTeamTag\": \"<string>\",\n      \"parentTeamTag\": \"<string>\"\n    },\n    {\n      \"childTeamTag\": \"<string>\",\n      \"parentTeamTag\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/teams/relationships",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"teams",
																"relationships"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"edges\": [\n    {\n      \"childTeamTag\": \"<string>\",\n      \"parentTeamTag\": \"<string>\"\n    },\n    {\n      \"childTeamTag\": \"<string>\",\n      \"parentTeamTag\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"edges\": [\n    {\n      \"childTeamTag\": \"<string>\",\n      \"parentTeamTag\": \"<string>\"\n    },\n    {\n      \"childTeamTag\": \"<string>\",\n      \"parentTeamTag\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/teams/relationships",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"teams",
																"relationships"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "members",
									"item": [
										{
											"name": "[Cortex managed teams] Update members in team",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"type\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/teams/members?teamTag=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"teams",
														"members"
													],
													"query": [
														{
															"key": "teamTag",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "For teams whose members are not backed by an IdP, use this API to update the team members. Note that it will replace the members in the team with the members defined in this request. \n*Warning:* This API should only be used if your team identifier contains non-alphanumeric characters. Otherwise, use the standard API under `Teams`."
											},
											"response": [
												{
													"name": "Successfully updated team members",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"type\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/teams/members?teamTag=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"teams",
																"members"
															],
															"query": [
																{
																	"key": "teamTag",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"additionalMembers\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"isArchived\": \"<boolean>\",\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"summary\": \"<string>\"\n  },\n  \"slackChannels\": [\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    }\n  ],\n  \"teamTag\": \"<string>\",\n  \"type\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"type\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/teams/members?teamTag=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"teams",
																"members"
															],
															"query": [
																{
																	"key": "teamTag",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												},
												{
													"name": "Team not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"type\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/teams/members?teamTag=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"teams",
																"members"
															],
															"query": [
																{
																	"key": "teamTag",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "departments",
									"item": [
										{
											"name": "Delete department",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/teams/departments?departmentTag=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"teams",
														"departments"
													],
													"query": [
														{
															"key": "departmentTag",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successfully deleted department",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/teams/departments?departmentTag=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"teams",
																"departments"
															],
															"query": [
																{
																	"key": "departmentTag",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Department not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/teams/departments?departmentTag=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"teams",
																"departments"
															],
															"query": [
																{
																	"key": "departmentTag",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Retrieve department details",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/teams/departments?departmentTag=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"teams",
														"departments"
													],
													"query": [
														{
															"key": "departmentTag",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successfully found department",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/teams/departments?departmentTag=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"teams",
																"departments"
															],
															"query": [
																{
																	"key": "departmentTag",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"departments\": [\n    {\n      \"departmentTag\": \"<string>\",\n      \"members\": [\n        {\n          \"email\": \"<string>\",\n          \"name\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"email\": \"<string>\",\n          \"name\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ],\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"departmentTag\": \"<string>\",\n      \"members\": [\n        {\n          \"email\": \"<string>\",\n          \"name\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"email\": \"<string>\",\n          \"name\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ],\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Department not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/teams/departments?departmentTag=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"teams",
																"departments"
															],
															"query": [
																{
																	"key": "departmentTag",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Create department",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"members\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"departmentTag\": \"<string>\",\n  \"description\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/teams/departments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"teams",
														"departments"
													]
												}
											},
											"response": [
												{
													"name": "Successfully created a department",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"members\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"departmentTag\": \"<string>\",\n  \"description\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/teams/departments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"teams",
																"departments"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"departmentTag\": \"<string>\",\n  \"members\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"members\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"departmentTag\": \"<string>\",\n  \"description\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/teams/departments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"teams",
																"departments"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Update department",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"members\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/teams/departments?departmentTag=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"teams",
														"departments"
													],
													"query": [
														{
															"key": "departmentTag",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successfully updated department",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"members\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/teams/departments?departmentTag=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"teams",
																"departments"
															],
															"query": [
																{
																	"key": "departmentTag",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"departmentTag\": \"<string>\",\n  \"members\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"members\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/teams/departments?departmentTag=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"teams",
																"departments"
															],
															"query": [
																{
																	"key": "departmentTag",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												},
												{
													"name": "Department not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"members\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/teams/departments?departmentTag=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"teams",
																"departments"
															],
															"query": [
																{
																	"key": "departmentTag",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Delete team",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/teams?teamTag=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"teams"
											],
											"query": [
												{
													"key": "teamTag",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Successfully deleted team",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/teams?teamTag=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"teams"
													],
													"query": [
														{
															"key": "teamTag",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Team not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/teams?teamTag=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"teams"
													],
													"query": [
														{
															"key": "teamTag",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Retrieve team details",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/teams?teamTag=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"teams"
											],
											"query": [
												{
													"key": "teamTag",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "*Warning:* This API should only be used if your team identifier contains non-alphanumeric characters. Otherwise, use the standard API under `Teams`."
									},
									"response": [
										{
											"name": "Successfully found team",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/teams?teamTag=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"teams"
													],
													"query": [
														{
															"key": "teamTag",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"teams\": [\n    {\n      \"additionalMembers\": [\n        {\n          \"email\": \"<string>\",\n          \"name\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"email\": \"<string>\",\n          \"name\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ],\n      \"isArchived\": \"<boolean>\",\n      \"links\": [\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\",\n          \"url\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\",\n          \"url\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ],\n      \"metadata\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"summary\": \"<string>\"\n      },\n      \"slackChannels\": [\n        {\n          \"name\": \"<string>\",\n          \"notificationsEnabled\": \"<boolean>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"notificationsEnabled\": \"<boolean>\"\n        }\n      ],\n      \"teamTag\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"additionalMembers\": [\n        {\n          \"email\": \"<string>\",\n          \"name\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"email\": \"<string>\",\n          \"name\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ],\n      \"isArchived\": \"<boolean>\",\n      \"links\": [\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\",\n          \"url\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"type\": \"<string>\",\n          \"url\": \"<string>\",\n          \"description\": \"<string>\"\n        }\n      ],\n      \"metadata\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"summary\": \"<string>\"\n      },\n      \"slackChannels\": [\n        {\n          \"name\": \"<string>\",\n          \"notificationsEnabled\": \"<boolean>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"notificationsEnabled\": \"<boolean>\"\n        }\n      ],\n      \"teamTag\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Team not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/teams?teamTag=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"teams"
													],
													"query": [
														{
															"key": "teamTag",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Create a team",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"additionalMembers\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"idpGroup\": {\n    \"members\": [\n      {\n        \"id\": \"<string>\",\n        \"email\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"email\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"provider\": \"GOOGLE\",\n    \"group\": \"<string>\"\n  },\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"summary\": \"<string>\"\n  },\n  \"slackChannels\": [\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    }\n  ],\n  \"teamTag\": \"<string>\",\n  \"type\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/teams",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"teams"
											]
										},
										"description": "Team memberships can be backed by an IdP group (from Okta, Azure AD, Google Groups, etc), or can be managed directly through Cortex. Each has a separate request shape, so make sure to select the correct example."
									},
									"response": [
										{
											"name": "Successfully created a team",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"additionalMembers\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"idpGroup\": {\n    \"members\": [\n      {\n        \"id\": \"<string>\",\n        \"email\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"email\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"provider\": \"GOOGLE\",\n    \"group\": \"<string>\"\n  },\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"summary\": \"<string>\"\n  },\n  \"slackChannels\": [\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    }\n  ],\n  \"teamTag\": \"<string>\",\n  \"type\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/teams",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"teams"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"additionalMembers\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"isArchived\": \"<boolean>\",\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"summary\": \"<string>\"\n  },\n  \"slackChannels\": [\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    }\n  ],\n  \"teamTag\": \"<string>\",\n  \"type\": \"<string>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"additionalMembers\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"idpGroup\": {\n    \"members\": [\n      {\n        \"id\": \"<string>\",\n        \"email\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"email\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"provider\": \"GOOGLE\",\n    \"group\": \"<string>\"\n  },\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"summary\": \"<string>\"\n  },\n  \"slackChannels\": [\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    }\n  ],\n  \"teamTag\": \"<string>\",\n  \"type\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/teams",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"teams"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Update team metadata",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"additionalMembers\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"summary\": \"<string>\"\n  },\n  \"slackChannels\": [\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    }\n  ],\n  \"type\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/teams?teamTag=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"teams"
											],
											"query": [
												{
													"key": "teamTag",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "*Warning:* This API should only be used if your team identifier contains non-alphanumeric characters. Otherwise, use the standard API under `Teams`."
									},
									"response": [
										{
											"name": "Successfully updated team",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"additionalMembers\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"summary\": \"<string>\"\n  },\n  \"slackChannels\": [\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    }\n  ],\n  \"type\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/teams?teamTag=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"teams"
													],
													"query": [
														{
															"key": "teamTag",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"additionalMembers\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"isArchived\": \"<boolean>\",\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"summary\": \"<string>\"\n  },\n  \"slackChannels\": [\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    }\n  ],\n  \"teamTag\": \"<string>\",\n  \"type\": \"<string>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"additionalMembers\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"summary\": \"<string>\"\n  },\n  \"slackChannels\": [\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    }\n  ],\n  \"type\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/teams?teamTag=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"teams"
													],
													"query": [
														{
															"key": "teamTag",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
										},
										{
											"name": "Team not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"additionalMembers\": [\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"email\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"links\": [\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"url\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"summary\": \"<string>\"\n  },\n  \"slackChannels\": [\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"notificationsEnabled\": \"<boolean>\"\n    }\n  ],\n  \"type\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/teams?teamTag=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"teams"
													],
													"query": [
														{
															"key": "teamTag",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "sonarqube",
							"item": [
								{
									"name": "default-configuration",
									"item": [
										{
											"name": "Retrieve default configuration",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/sonarqube/default-configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"sonarqube",
														"default-configuration"
													]
												}
											},
											"response": [
												{
													"name": "Successfully found default configuration",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/sonarqube/default-configuration",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"sonarqube",
																"default-configuration"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"alias\": \"<string>\",\n  \"host\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"lastFour\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/sonarqube/default-configuration",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"sonarqube",
																"default-configuration"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "configurations",
									"item": [
										{
											"name": "Delete all configurations",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/sonarqube/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"sonarqube",
														"configurations"
													]
												}
											},
											"response": [
												{
													"name": "Successfully deleted all configurations",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/sonarqube/configurations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"sonarqube",
																"configurations"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/sonarqube/configurations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"sonarqube",
																"configurations"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/sonarqube/configurations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"sonarqube",
																"configurations"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Retrieve configurations",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/sonarqube/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"sonarqube",
														"configurations"
													]
												}
											},
											"response": [
												{
													"name": "Successfully found configurations",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/sonarqube/configurations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"sonarqube",
																"configurations"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"configurations\": [\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/sonarqube/configurations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"sonarqube",
																"configurations"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Add multiple configurations",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"configurations\": [\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"token\": \"<string>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"token\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/sonarqube/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"sonarqube",
														"configurations"
													]
												}
											},
											"response": [
												{
													"name": "Successfully added configurations",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"configurations\": [\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"token\": \"<string>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"token\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/sonarqube/configurations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"sonarqube",
																"configurations"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"configurations\": [\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\"\n    }\n  ],\n  \"skippedConfigurations\": {\n    \"velit3d\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"configurations\": [\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"token\": \"<string>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"token\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/sonarqube/configurations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"sonarqube",
																"configurations"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "configuration",
									"item": [
										{
											"name": "{alias}",
											"item": [
												{
													"name": "Delete a configuration",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/sonarqube/configuration/:alias",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"sonarqube",
																"configuration",
																":alias"
															],
															"variable": [
																{
																	"key": "alias",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully deleted configuration",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/sonarqube/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"sonarqube",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "{\n  \"configurations\": [\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/sonarqube/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"sonarqube",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/sonarqube/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"sonarqube",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														},
														{
															"name": "Configuration not found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/sonarqube/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"sonarqube",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Retrieve a configuration",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/sonarqube/configuration/:alias",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"sonarqube",
																"configuration",
																":alias"
															],
															"variable": [
																{
																	"key": "alias",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully found configuration",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/sonarqube/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"sonarqube",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "{\n  \"alias\": \"<string>\",\n  \"host\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"lastFour\": \"<string>\"\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/sonarqube/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"sonarqube",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														},
														{
															"name": "Configuration not found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/sonarqube/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"sonarqube",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Update a configuration",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"alias\": \"<string>\",\n  \"isDefault\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/sonarqube/configuration/:alias",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"sonarqube",
																"configuration",
																":alias"
															],
															"variable": [
																{
																	"key": "alias",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully updated configuration",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"alias\": \"<string>\",\n  \"isDefault\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/sonarqube/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"sonarqube",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "{\n  \"configurations\": [\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"alias\": \"<string>\",\n  \"isDefault\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/sonarqube/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"sonarqube",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"alias\": \"<string>\",\n  \"isDefault\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/sonarqube/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"sonarqube",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														},
														{
															"name": "Configuration not found",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"alias\": \"<string>\",\n  \"isDefault\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/sonarqube/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"sonarqube",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Add a single configuration",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"alias\": \"<string>\",\n  \"host\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"token\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/sonarqube/configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"sonarqube",
														"configuration"
													]
												}
											},
											"response": [
												{
													"name": "Successfully added configuration",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"alias\": \"<string>\",\n  \"host\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"token\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/sonarqube/configuration",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"sonarqube",
																"configuration"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"configurations\": [\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"alias\": \"<string>\",\n  \"host\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"token\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/sonarqube/configuration",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"sonarqube",
																"configuration"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"alias\": \"<string>\",\n  \"host\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"token\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/sonarqube/configuration",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"sonarqube",
																"configuration"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "service-groups",
							"item": [
								{
									"name": "relationships",
									"item": [
										{
											"name": "Delete relationship between groups",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/service-groups/relationships?parent=<string>&child=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"service-groups",
														"relationships"
													],
													"query": [
														{
															"key": "parent",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "child",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successfully delete group relationship",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/service-groups/relationships?parent=<string>&child=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"service-groups",
																"relationships"
															],
															"query": [
																{
																	"key": "parent",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "child",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"relationships\": [\n    {\n      \"child\": \"<string>\",\n      \"parent\": \"<string>\"\n    },\n    {\n      \"child\": \"<string>\",\n      \"parent\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Group not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/service-groups/relationships?parent=<string>&child=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"service-groups",
																"relationships"
															],
															"query": [
																{
																	"key": "parent",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "child",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Replace group relationships",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"relationships\": [\n    {\n      \"child\": \"<string>\",\n      \"parent\": \"<string>\"\n    },\n    {\n      \"child\": \"<string>\",\n      \"parent\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/service-groups/relationships?replace=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"service-groups",
														"relationships"
													],
													"query": [
														{
															"key": "replace",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successfully created group relationships",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"relationships\": [\n    {\n      \"child\": \"<string>\",\n      \"parent\": \"<string>\"\n    },\n    {\n      \"child\": \"<string>\",\n      \"parent\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/service-groups/relationships?replace=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"service-groups",
																"relationships"
															],
															"query": [
																{
																	"key": "replace",
																	"value": "",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"relationships\": [\n    {\n      \"child\": \"<string>\",\n      \"parent\": \"<string>\"\n    },\n    {\n      \"child\": \"<string>\",\n      \"parent\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"relationships\": [\n    {\n      \"child\": \"<string>\",\n      \"parent\": \"<string>\"\n    },\n    {\n      \"child\": \"<string>\",\n      \"parent\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/service-groups/relationships?replace=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"service-groups",
																"relationships"
															],
															"query": [
																{
																	"key": "replace",
																	"value": "",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "scorecards",
							"item": [
								{
									"name": "{tag}",
									"item": [
										{
											"name": "scores",
											"item": [
												{
													"name": "Retrieve Scorecard scores",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/scorecards/:tag/scores",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"scorecards",
																":tag",
																"scores"
															],
															"variable": [
																{
																	"key": "tag",
																	"value": "<string>"
																}
															]
														},
														"description": "Returns latest scores for all entities in the Scorecard"
													},
													"response": [
														{
															"name": "Scorecard scores",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/scorecards/:tag/scores",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"scorecards",
																		":tag",
																		"scores"
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"serviceScores\": [\n    {\n      \"score\": {\n        \"ladderLevels\": [\n          {\n            \"level\": {\n              \"name\": \"<string>\",\n              \"number\": \"<integer>\"\n            }\n          },\n          {\n            \"level\": {\n              \"name\": \"<string>\",\n              \"number\": \"<integer>\"\n            }\n          }\n        ],\n        \"rules\": [\n          {\n            \"expression\": \"<string>\",\n            \"score\": \"<number>\",\n            \"error\": \"<string>\"\n          },\n          {\n            \"expression\": \"<string>\",\n            \"score\": \"<number>\",\n            \"error\": \"<string>\"\n          }\n        ],\n        \"summary\": {\n          \"percentage\": \"<number>\",\n          \"score\": \"<number>\",\n          \"totalPossibleScore\": \"<number>\"\n        }\n      },\n      \"service\": {\n        \"name\": \"<string>\",\n        \"owners\": {\n          \"individuals\": [\n            {\n              \"email\": \"<string>\",\n              \"description\": \"<string>\"\n            },\n            {\n              \"email\": \"<string>\",\n              \"description\": \"<string>\"\n            }\n          ],\n          \"groups\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        \"tag\": \"<string>\",\n        \"groups\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"score\": {\n        \"ladderLevels\": [\n          {\n            \"level\": {\n              \"name\": \"<string>\",\n              \"number\": \"<integer>\"\n            }\n          },\n          {\n            \"level\": {\n              \"name\": \"<string>\",\n              \"number\": \"<integer>\"\n            }\n          }\n        ],\n        \"rules\": [\n          {\n            \"expression\": \"<string>\",\n            \"score\": \"<number>\",\n            \"error\": \"<string>\"\n          },\n          {\n            \"expression\": \"<string>\",\n            \"score\": \"<number>\",\n            \"error\": \"<string>\"\n          }\n        ],\n        \"summary\": {\n          \"percentage\": \"<number>\",\n          \"score\": \"<number>\",\n          \"totalPossibleScore\": \"<number>\"\n        }\n      },\n      \"service\": {\n        \"name\": \"<string>\",\n        \"owners\": {\n          \"individuals\": [\n            {\n              \"email\": \"<string>\",\n              \"description\": \"<string>\"\n            },\n            {\n              \"email\": \"<string>\",\n              \"description\": \"<string>\"\n            }\n          ],\n          \"groups\": [\n            \"<string>\",\n            \"<string>\"\n          ]\n        },\n        \"tag\": \"<string>\",\n        \"groups\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Scorecard not found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/scorecards/:tag/scores",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"scorecards",
																		":tag",
																		"scores"
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "next-steps",
											"item": [
												{
													"name": "Retrieve next steps for entity in Scorecard",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/scorecards/:tag/next-steps?entityTag=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"scorecards",
																":tag",
																"next-steps"
															],
															"query": [
																{
																	"key": "entityTag",
																	"value": "<string>",
																	"description": "(Required) Entity tag (x-cortex-tag)"
																}
															],
															"variable": [
																{
																	"key": "tag",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Any rules remaining for the entity to reach the next level in the Scorecard.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/scorecards/:tag/next-steps?entityTag=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"scorecards",
																		":tag",
																		"next-steps"
																	],
																	"query": [
																		{
																			"key": "entityTag",
																			"value": "<string>",
																			"description": "(Required) Entity tag (x-cortex-tag)"
																		}
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"nextSteps\": [\n    {\n      \"rulesToComplete\": [\n        {\n          \"expression\": \"<string>\",\n          \"description\": \"<string>\",\n          \"title\": \"<string>\"\n        },\n        {\n          \"expression\": \"<string>\",\n          \"description\": \"<string>\",\n          \"title\": \"<string>\"\n        }\n      ],\n      \"currentLevel\": {\n        \"level\": {\n          \"name\": \"<string>\",\n          \"number\": \"<integer>\"\n        }\n      },\n      \"nextLevel\": {\n        \"level\": {\n          \"name\": \"<string>\",\n          \"number\": \"<integer>\"\n        }\n      }\n    },\n    {\n      \"rulesToComplete\": [\n        {\n          \"expression\": \"<string>\",\n          \"description\": \"<string>\",\n          \"title\": \"<string>\"\n        },\n        {\n          \"expression\": \"<string>\",\n          \"description\": \"<string>\",\n          \"title\": \"<string>\"\n        }\n      ],\n      \"currentLevel\": {\n        \"level\": {\n          \"name\": \"<string>\",\n          \"number\": \"<integer>\"\n        }\n      },\n      \"nextLevel\": {\n        \"level\": {\n          \"name\": \"<string>\",\n          \"number\": \"<integer>\"\n        }\n      }\n    }\n  ]\n}"
														},
														{
															"name": "Scorecard not found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/scorecards/:tag/next-steps?entityTag=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"scorecards",
																		":tag",
																		"next-steps"
																	],
																	"query": [
																		{
																			"key": "entityTag",
																			"value": "<string>",
																			"description": "(Required) Entity tag (x-cortex-tag)"
																		}
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Delete Scorecard",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/scorecards/:tag",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"scorecards",
														":tag"
													],
													"variable": [
														{
															"key": "tag",
															"value": "<string>"
														}
													]
												}
											},
											"response": [
												{
													"name": "Successfully deleted Scorecard",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/scorecards/:tag",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"scorecards",
																":tag"
															],
															"variable": [
																{
																	"key": "tag"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Scorecard not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/scorecards/:tag",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"scorecards",
																":tag"
															],
															"variable": [
																{
																	"key": "tag"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Retrieve Scorecard",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/scorecards/:tag",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"scorecards",
														":tag"
													],
													"variable": [
														{
															"key": "tag",
															"value": "<string>"
														}
													]
												}
											},
											"response": [
												{
													"name": "Successfully retrieved Scorecard",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/scorecards/:tag",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"scorecards",
																":tag"
															],
															"variable": [
																{
																	"key": "tag"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"scorecard\": {\n    \"isDraft\": \"<boolean>\",\n    \"rules\": [\n      {\n        \"description\": \"<string>\",\n        \"expression\": \"<string>\",\n        \"failureMessage\": \"<string>\",\n        \"levelName\": \"<string>\",\n        \"title\": \"<string>\",\n        \"weight\": \"<number>\"\n      },\n      {\n        \"description\": \"<string>\",\n        \"expression\": \"<string>\",\n        \"failureMessage\": \"<string>\",\n        \"levelName\": \"<string>\",\n        \"title\": \"<string>\",\n        \"weight\": \"<number>\"\n      }\n    ],\n    \"description\": \"<string>\",\n    \"levels\": [\n      {\n        \"level\": {\n          \"name\": \"<string>\",\n          \"number\": \"<integer>\"\n        }\n      },\n      {\n        \"level\": {\n          \"name\": \"<string>\",\n          \"number\": \"<integer>\"\n        }\n      }\n    ],\n    \"name\": \"<string>\",\n    \"tag\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Scorecard not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/scorecards/:tag",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"scorecards",
																":tag"
															],
															"variable": [
																{
																	"key": "tag"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "descriptor",
									"item": [
										{
											"name": "Create or update Scorecard",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/yaml;charset=UTF-8"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/scorecards/descriptor?dryRun=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"scorecards",
														"descriptor"
													],
													"query": [
														{
															"key": "dryRun",
															"value": "<boolean>",
															"description": "(Required) When true, this endpoint only validates the descriptor contents and returns any errors or warnings."
														}
													]
												},
												"description": "Create or update a Scorecard using the descriptor YAML. The operation is determined by the existence of a Scorecard with the same `tag` as passed in the descriptor."
											},
											"response": [
												{
													"name": "Created Scorecard",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/yaml;charset=UTF-8"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/scorecards/descriptor?dryRun=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"scorecards",
																"descriptor"
															],
															"query": [
																{
																	"key": "dryRun",
																	"value": "<boolean>",
																	"description": "(Required) When true, this endpoint only validates the descriptor contents and returns any errors or warnings."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"scorecard\": {\n    \"isDraft\": \"<boolean>\",\n    \"rules\": [\n      {\n        \"description\": \"<string>\",\n        \"expression\": \"<string>\",\n        \"failureMessage\": \"<string>\",\n        \"levelName\": \"<string>\",\n        \"title\": \"<string>\",\n        \"weight\": \"<number>\"\n      },\n      {\n        \"description\": \"<string>\",\n        \"expression\": \"<string>\",\n        \"failureMessage\": \"<string>\",\n        \"levelName\": \"<string>\",\n        \"title\": \"<string>\",\n        \"weight\": \"<number>\"\n      }\n    ],\n    \"description\": \"<string>\",\n    \"levels\": [\n      {\n        \"level\": {\n          \"name\": \"<string>\",\n          \"number\": \"<integer>\"\n        }\n      },\n      {\n        \"level\": {\n          \"name\": \"<string>\",\n          \"number\": \"<integer>\"\n        }\n      }\n    ],\n    \"name\": \"<string>\",\n    \"tag\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/yaml;charset=UTF-8"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/scorecards/descriptor?dryRun=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"scorecards",
																"descriptor"
															],
															"query": [
																{
																	"key": "dryRun",
																	"value": "<boolean>",
																	"description": "(Required) When true, this endpoint only validates the descriptor contents and returns any errors or warnings."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "List Scorecards",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/scorecards?showDrafts=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"scorecards"
											],
											"query": [
												{
													"key": "showDrafts",
													"value": "<boolean>"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/scorecards?showDrafts=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"scorecards"
													],
													"query": [
														{
															"key": "showDrafts",
															"value": "<boolean>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"scorecards\": [\n    {\n      \"isDraft\": \"<boolean>\",\n      \"rules\": [\n        {\n          \"description\": \"<string>\",\n          \"expression\": \"<string>\",\n          \"failureMessage\": \"<string>\",\n          \"levelName\": \"<string>\",\n          \"title\": \"<string>\",\n          \"weight\": \"<number>\"\n        },\n        {\n          \"description\": \"<string>\",\n          \"expression\": \"<string>\",\n          \"failureMessage\": \"<string>\",\n          \"levelName\": \"<string>\",\n          \"title\": \"<string>\",\n          \"weight\": \"<number>\"\n        }\n      ],\n      \"description\": \"<string>\",\n      \"levels\": [\n        {\n          \"level\": {\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\"\n          }\n        },\n        {\n          \"level\": {\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\"\n          }\n        }\n      ],\n      \"name\": \"<string>\",\n      \"tag\": \"<string>\"\n    },\n    {\n      \"isDraft\": \"<boolean>\",\n      \"rules\": [\n        {\n          \"description\": \"<string>\",\n          \"expression\": \"<string>\",\n          \"failureMessage\": \"<string>\",\n          \"levelName\": \"<string>\",\n          \"title\": \"<string>\",\n          \"weight\": \"<number>\"\n        },\n        {\n          \"description\": \"<string>\",\n          \"expression\": \"<string>\",\n          \"failureMessage\": \"<string>\",\n          \"levelName\": \"<string>\",\n          \"title\": \"<string>\",\n          \"weight\": \"<number>\"\n        }\n      ],\n      \"description\": \"<string>\",\n      \"levels\": [\n        {\n          \"level\": {\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\"\n          }\n        },\n        {\n          \"level\": {\n            \"name\": \"<string>\",\n            \"number\": \"<integer>\"\n          }\n        }\n      ],\n      \"name\": \"<string>\",\n      \"tag\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "queries",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Retrieve query results",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/queries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"queries",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>"
														}
													]
												},
												"description": "Retrieve the status and results of a CQL query"
											},
											"response": [
												{
													"name": "Successfully found query",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/queries/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"queries",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"queryDetails\": {\n    \"initiatedAt\": \"<dateTime>\",\n    \"query\": \"<string>\",\n    \"jobId\": \"<string>\"\n  },\n  \"status\": \"FAILURE\"\n}"
												},
												{
													"name": "Query not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/queries/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"queries",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Run query",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"query\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/queries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"queries"
											]
										},
										"description": "Run a CQL query. For more information about the types of queries you can run, take a look at our CQL Explorer in the app."
									},
									"response": [
										{
											"name": "Successfully submitted query",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"query\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/queries",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"queries"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"initiatedAt\": \"<dateTime>\",\n  \"query\": \"<string>\",\n  \"jobId\": \"<string>\"\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"query\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/queries",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"queries"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
										},
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"query\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/queries",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"queries"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "prometheus",
							"item": [
								{
									"name": "default-configuration",
									"item": [
										{
											"name": "Retrieve default configuration",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/prometheus/default-configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"prometheus",
														"default-configuration"
													]
												}
											},
											"response": [
												{
													"name": "Successfully found default configuration",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/prometheus/default-configuration",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"prometheus",
																"default-configuration"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"alias\": \"<string>\",\n  \"host\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"lastFour\": \"<string>\",\n  \"username\": \"<string>\",\n  \"prometheusTenantId\": \"<string>\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/prometheus/default-configuration",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"prometheus",
																"default-configuration"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "configurations",
									"item": [
										{
											"name": "Delete all configurations",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/prometheus/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"prometheus",
														"configurations"
													]
												}
											},
											"response": [
												{
													"name": "Successfully deleted all configurations",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/prometheus/configurations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"prometheus",
																"configurations"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/prometheus/configurations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"prometheus",
																"configurations"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/prometheus/configurations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"prometheus",
																"configurations"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Retrieve configurations",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/prometheus/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"prometheus",
														"configurations"
													]
												}
											},
											"response": [
												{
													"name": "Successfully found configurations",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/prometheus/configurations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"prometheus",
																"configurations"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"configurations\": [\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\",\n      \"username\": \"<string>\",\n      \"prometheusTenantId\": \"<string>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\",\n      \"username\": \"<string>\",\n      \"prometheusTenantId\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/prometheus/configurations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"prometheus",
																"configurations"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Add multiple configurations",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"configurations\": [\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"password\": \"<string>\",\n      \"username\": \"<string>\",\n      \"prometheusTenantId\": \"<string>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"password\": \"<string>\",\n      \"username\": \"<string>\",\n      \"prometheusTenantId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/prometheus/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"prometheus",
														"configurations"
													]
												}
											},
											"response": [
												{
													"name": "Successfully added configurations",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"configurations\": [\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"password\": \"<string>\",\n      \"username\": \"<string>\",\n      \"prometheusTenantId\": \"<string>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"password\": \"<string>\",\n      \"username\": \"<string>\",\n      \"prometheusTenantId\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/prometheus/configurations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"prometheus",
																"configurations"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"configurations\": [\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\",\n      \"username\": \"<string>\",\n      \"prometheusTenantId\": \"<string>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\",\n      \"username\": \"<string>\",\n      \"prometheusTenantId\": \"<string>\"\n    }\n  ],\n  \"skippedConfigurations\": {\n    \"minim415\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"configurations\": [\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"password\": \"<string>\",\n      \"username\": \"<string>\",\n      \"prometheusTenantId\": \"<string>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"password\": \"<string>\",\n      \"username\": \"<string>\",\n      \"prometheusTenantId\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/prometheus/configurations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"prometheus",
																"configurations"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "configuration",
									"item": [
										{
											"name": "{alias}",
											"item": [
												{
													"name": "Delete a configuration",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/prometheus/configuration/:alias",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"prometheus",
																"configuration",
																":alias"
															],
															"variable": [
																{
																	"key": "alias",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully deleted configuration",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/prometheus/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"prometheus",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "{\n  \"configurations\": [\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\",\n      \"username\": \"<string>\",\n      \"prometheusTenantId\": \"<string>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\",\n      \"username\": \"<string>\",\n      \"prometheusTenantId\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/prometheus/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"prometheus",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/prometheus/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"prometheus",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														},
														{
															"name": "Configuration not found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/prometheus/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"prometheus",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Retrieve a configuration",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/prometheus/configuration/:alias",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"prometheus",
																"configuration",
																":alias"
															],
															"variable": [
																{
																	"key": "alias",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully found configuration",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/prometheus/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"prometheus",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "{\n  \"alias\": \"<string>\",\n  \"host\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"lastFour\": \"<string>\",\n  \"username\": \"<string>\",\n  \"prometheusTenantId\": \"<string>\"\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/prometheus/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"prometheus",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														},
														{
															"name": "Configuration not found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/prometheus/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"prometheus",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Update a configuration",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"alias\": \"<string>\",\n  \"isDefault\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/prometheus/configuration/:alias",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"prometheus",
																"configuration",
																":alias"
															],
															"variable": [
																{
																	"key": "alias",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully updated configuration",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"alias\": \"<string>\",\n  \"isDefault\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/prometheus/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"prometheus",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "{\n  \"configurations\": [\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\",\n      \"username\": \"<string>\",\n      \"prometheusTenantId\": \"<string>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\",\n      \"username\": \"<string>\",\n      \"prometheusTenantId\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"alias\": \"<string>\",\n  \"isDefault\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/prometheus/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"prometheus",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"alias\": \"<string>\",\n  \"isDefault\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/prometheus/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"prometheus",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														},
														{
															"name": "Configuration not found",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"alias\": \"<string>\",\n  \"isDefault\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/prometheus/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"prometheus",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Add a single configuration",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"alias\": \"<string>\",\n  \"host\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"password\": \"<string>\",\n  \"username\": \"<string>\",\n  \"prometheusTenantId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/prometheus/configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"prometheus",
														"configuration"
													]
												}
											},
											"response": [
												{
													"name": "Successfully added configuration",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"alias\": \"<string>\",\n  \"host\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"password\": \"<string>\",\n  \"username\": \"<string>\",\n  \"prometheusTenantId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/prometheus/configuration",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"prometheus",
																"configuration"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"configurations\": [\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\",\n      \"username\": \"<string>\",\n      \"prometheusTenantId\": \"<string>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"host\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\",\n      \"username\": \"<string>\",\n      \"prometheusTenantId\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"alias\": \"<string>\",\n  \"host\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"password\": \"<string>\",\n  \"username\": \"<string>\",\n  \"prometheusTenantId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/prometheus/configuration",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"prometheus",
																"configuration"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"alias\": \"<string>\",\n  \"host\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"password\": \"<string>\",\n  \"username\": \"<string>\",\n  \"prometheusTenantId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/prometheus/configuration",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"prometheus",
																"configuration"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "open-api",
							"item": [
								{
									"name": "Create or update entity",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/openapi;charset=UTF-8"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/open-api?dryRun=<boolean>&githubPullRequest=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"open-api"
											],
											"query": [
												{
													"key": "dryRun",
													"value": "<boolean>",
													"description": "When true, this endpoint only validates the descriptor contents and returns any errors or warnings."
												},
												{
													"key": "githubPullRequest",
													"value": "<integer>",
													"description": "Add a comment with validation errors on the pull request with the given ID"
												}
											]
										},
										"description": "Create a catalog entity using a descriptor YAML. If the YAML refers to an entity that already exists (as referenced by the `x-cortex-tag`), this API will update the existing entity."
									},
									"response": [
										{
											"name": "Returns a 200 even if there are errors",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/openapi;charset=UTF-8"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/open-api?dryRun=<boolean>&githubPullRequest=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"open-api"
													],
													"query": [
														{
															"key": "dryRun",
															"value": "<boolean>",
															"description": "When true, this endpoint only validates the descriptor contents and returns any errors or warnings."
														},
														{
															"key": "githubPullRequest",
															"value": "<integer>",
															"description": "Add a comment with validation errors on the pull request with the given ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"ok\": \"<boolean>\",\n  \"violations\": [\n    {\n      \"paths\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"description\": \"<string>\",\n      \"endLine\": \"<integer>\",\n      \"pointer\": \"<string>\",\n      \"ruleLink\": \"<string>\",\n      \"startLine\": \"<integer>\",\n      \"title\": \"<string>\",\n      \"violationType\": \"MAY\"\n    },\n    {\n      \"paths\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"description\": \"<string>\",\n      \"endLine\": \"<integer>\",\n      \"pointer\": \"<string>\",\n      \"ruleLink\": \"<string>\",\n      \"startLine\": \"<integer>\",\n      \"title\": \"<string>\",\n      \"violationType\": \"MUST\"\n    }\n  ]\n}"
										},
										{
											"name": "Invalid YAML (major errors or incorrectly formatted YAML)",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/openapi;charset=UTF-8"
													},
													{
														"key": "Accept",
														"value": "*/*"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/open-api?dryRun=<boolean>&githubPullRequest=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"open-api"
													],
													"query": [
														{
															"key": "dryRun",
															"value": "<boolean>",
															"description": "When true, this endpoint only validates the descriptor contents and returns any errors or warnings."
														},
														{
															"key": "githubPullRequest",
															"value": "<integer>",
															"description": "Add a comment with validation errors on the pull request with the given ID"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"ok\": \"<boolean>\",\n  \"violations\": [\n    {\n      \"paths\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"description\": \"<string>\",\n      \"endLine\": \"<integer>\",\n      \"pointer\": \"<string>\",\n      \"ruleLink\": \"<string>\",\n      \"startLine\": \"<integer>\",\n      \"title\": \"<string>\",\n      \"violationType\": \"MAY\"\n    },\n    {\n      \"paths\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"description\": \"<string>\",\n      \"endLine\": \"<integer>\",\n      \"pointer\": \"<string>\",\n      \"ruleLink\": \"<string>\",\n      \"startLine\": \"<integer>\",\n      \"title\": \"<string>\",\n      \"violationType\": \"MUST\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "newrelic",
							"item": [
								{
									"name": "default-configuration",
									"item": [
										{
											"name": "Retrieve default configuration",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/newrelic/default-configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"newrelic",
														"default-configuration"
													]
												}
											},
											"response": [
												{
													"name": "Successfully found default configuration",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/newrelic/default-configuration",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"newrelic",
																"default-configuration"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"alias\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"lastFour\": \"<string>\",\n  \"region\": \"US\",\n  \"accountId\": \"<integer>\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/newrelic/default-configuration",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"newrelic",
																"default-configuration"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "configurations",
									"item": [
										{
											"name": "Delete all configurations",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/newrelic/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"newrelic",
														"configurations"
													]
												}
											},
											"response": [
												{
													"name": "Successfully deleted all configurations",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/newrelic/configurations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"newrelic",
																"configurations"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/newrelic/configurations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"newrelic",
																"configurations"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/newrelic/configurations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"newrelic",
																"configurations"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Retrieve configurations",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/newrelic/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"newrelic",
														"configurations"
													]
												}
											},
											"response": [
												{
													"name": "Successfully found configurations",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/newrelic/configurations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"newrelic",
																"configurations"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"configurations\": [\n    {\n      \"alias\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\",\n      \"region\": \"EU\",\n      \"accountId\": \"<integer>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\",\n      \"region\": \"US\",\n      \"accountId\": \"<integer>\"\n    }\n  ]\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/newrelic/configurations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"newrelic",
																"configurations"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Add multiple configurations",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"configurations\": [\n    {\n      \"alias\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"personalKey\": \"<string>\",\n      \"region\": \"EU\",\n      \"accountId\": \"<integer>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"personalKey\": \"<string>\",\n      \"region\": \"EU\",\n      \"accountId\": \"<integer>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/newrelic/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"newrelic",
														"configurations"
													]
												}
											},
											"response": [
												{
													"name": "Successfully added configurations",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"configurations\": [\n    {\n      \"alias\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"personalKey\": \"<string>\",\n      \"region\": \"EU\",\n      \"accountId\": \"<integer>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"personalKey\": \"<string>\",\n      \"region\": \"EU\",\n      \"accountId\": \"<integer>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/newrelic/configurations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"newrelic",
																"configurations"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"configurations\": [\n    {\n      \"alias\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\",\n      \"region\": \"US\",\n      \"accountId\": \"<integer>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\",\n      \"region\": \"EU\",\n      \"accountId\": \"<integer>\"\n    }\n  ],\n  \"skippedConfigurations\": {\n    \"anim_4\": \"<string>\",\n    \"fugiat25\": \"<string>\",\n    \"aliqua__5\": \"<string>\"\n  }\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"configurations\": [\n    {\n      \"alias\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"personalKey\": \"<string>\",\n      \"region\": \"EU\",\n      \"accountId\": \"<integer>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"personalKey\": \"<string>\",\n      \"region\": \"EU\",\n      \"accountId\": \"<integer>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/newrelic/configurations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"newrelic",
																"configurations"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "configuration",
									"item": [
										{
											"name": "{alias}",
											"item": [
												{
													"name": "Delete a configuration",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/newrelic/configuration/:alias",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"newrelic",
																"configuration",
																":alias"
															],
															"variable": [
																{
																	"key": "alias",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully deleted configuration",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/newrelic/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"newrelic",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "{\n  \"configurations\": [\n    {\n      \"alias\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\",\n      \"region\": \"EU\",\n      \"accountId\": \"<integer>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\",\n      \"region\": \"US\",\n      \"accountId\": \"<integer>\"\n    }\n  ]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/newrelic/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"newrelic",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/newrelic/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"newrelic",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														},
														{
															"name": "Configuration not found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/newrelic/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"newrelic",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Retrieve a configuration",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/newrelic/configuration/:alias",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"newrelic",
																"configuration",
																":alias"
															],
															"variable": [
																{
																	"key": "alias",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully found configuration",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/newrelic/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"newrelic",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "{\n  \"alias\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"lastFour\": \"<string>\",\n  \"region\": \"US\",\n  \"accountId\": \"<integer>\"\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/newrelic/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"newrelic",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														},
														{
															"name": "Configuration not found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/newrelic/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"newrelic",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Update a configuration",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"alias\": \"<string>\",\n  \"isDefault\": \"<boolean>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/newrelic/configuration/:alias",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"newrelic",
																"configuration",
																":alias"
															],
															"variable": [
																{
																	"key": "alias",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully updated configuration",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"alias\": \"<string>\",\n  \"isDefault\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/newrelic/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"newrelic",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "{\n  \"configurations\": [\n    {\n      \"alias\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\",\n      \"region\": \"EU\",\n      \"accountId\": \"<integer>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\",\n      \"region\": \"US\",\n      \"accountId\": \"<integer>\"\n    }\n  ]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"alias\": \"<string>\",\n  \"isDefault\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/newrelic/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"newrelic",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"alias\": \"<string>\",\n  \"isDefault\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/newrelic/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"newrelic",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														},
														{
															"name": "Configuration not found",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"alias\": \"<string>\",\n  \"isDefault\": \"<boolean>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/newrelic/configuration/:alias",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"newrelic",
																		"configuration",
																		":alias"
																	],
																	"variable": [
																		{
																			"key": "alias"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Add a single configuration",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"alias\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"personalKey\": \"<string>\",\n  \"region\": \"US\",\n  \"accountId\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/newrelic/configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"newrelic",
														"configuration"
													]
												}
											},
											"response": [
												{
													"name": "Successfully added configuration",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"alias\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"personalKey\": \"<string>\",\n  \"region\": \"US\",\n  \"accountId\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/newrelic/configuration",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"newrelic",
																"configuration"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"configurations\": [\n    {\n      \"alias\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\",\n      \"region\": \"EU\",\n      \"accountId\": \"<integer>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"isDefault\": \"<boolean>\",\n      \"lastFour\": \"<string>\",\n      \"region\": \"US\",\n      \"accountId\": \"<integer>\"\n    }\n  ]\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"alias\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"personalKey\": \"<string>\",\n  \"region\": \"US\",\n  \"accountId\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/newrelic/configuration",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"newrelic",
																"configuration"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"alias\": \"<string>\",\n  \"isDefault\": \"<boolean>\",\n  \"personalKey\": \"<string>\",\n  \"region\": \"US\",\n  \"accountId\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/newrelic/configuration",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"newrelic",
																"configuration"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "groups",
							"item": [
								{
									"name": "relationships",
									"item": [
										{
											"name": "Delete relationship between groups",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/groups/relationships?parent=<string>&child=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"groups",
														"relationships"
													],
													"query": [
														{
															"key": "parent",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "child",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successfully delete group relationship",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/groups/relationships?parent=<string>&child=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"groups",
																"relationships"
															],
															"query": [
																{
																	"key": "parent",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "child",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"relationships\": [\n    {\n      \"child\": \"<string>\",\n      \"parent\": \"<string>\"\n    },\n    {\n      \"child\": \"<string>\",\n      \"parent\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Group not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/groups/relationships?parent=<string>&child=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"groups",
																"relationships"
															],
															"query": [
																{
																	"key": "parent",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "child",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Replace group relationships",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"relationships\": [\n    {\n      \"child\": \"<string>\",\n      \"parent\": \"<string>\"\n    },\n    {\n      \"child\": \"<string>\",\n      \"parent\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/groups/relationships?replace=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"groups",
														"relationships"
													],
													"query": [
														{
															"key": "replace",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Successfully created group relationships",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"relationships\": [\n    {\n      \"child\": \"<string>\",\n      \"parent\": \"<string>\"\n    },\n    {\n      \"child\": \"<string>\",\n      \"parent\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/groups/relationships?replace=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"groups",
																"relationships"
															],
															"query": [
																{
																	"key": "replace",
																	"value": "",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"relationships\": [\n    {\n      \"child\": \"<string>\",\n      \"parent\": \"<string>\"\n    },\n    {\n      \"child\": \"<string>\",\n      \"parent\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"relationships\": [\n    {\n      \"child\": \"<string>\",\n      \"parent\": \"<string>\"\n    },\n    {\n      \"child\": \"<string>\",\n      \"parent\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/groups/relationships?replace=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"groups",
																"relationships"
															],
															"query": [
																{
																	"key": "replace",
																	"value": "",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "custom-integrations",
							"item": [
								{
									"name": "data",
									"item": [
										{
											"name": "{uuid}",
											"item": [
												{
													"name": "Add custom data via webhook",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/custom-integrations/data/:uuid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"custom-integrations",
																"data",
																":uuid"
															],
															"variable": [
																{
																	"key": "uuid",
																	"value": "<string>"
																}
															]
														},
														"description": "Refer to the [Webhook section](/docs/reference/basics/custom-data#webhook) of the Custom Data docs for more information. This API is preconfigured in your workspace settings under Custom Integrations. The UUID corresponds to a custom data key, as well as a `jq` command that maps the data in this payload to an entity in your workspace."
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/custom-integrations/data/:uuid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"custom-integrations",
																		"data",
																		":uuid"
																	],
																	"variable": [
																		{
																			"key": "uuid"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "catalog",
							"item": [
								{
									"name": "{tag}",
									"item": [
										{
											"name": "packages",
											"item": [
												{
													"name": "python",
													"item": [
														{
															"name": "requirements",
															"item": [
																{
																	"name": "[python] Upload requirements.txt",
																	"request": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "<string>",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/python/requirements",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":tag",
																				"packages",
																				"python",
																				"requirements"
																			],
																			"variable": [
																				{
																					"key": "tag",
																					"value": "<string>"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Successfully saved packages",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: bearer",
																						"key": "Authorization",
																						"value": "Bearer <token>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "<string>",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/python/requirements",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v1",
																						"catalog",
																						":tag",
																						"packages",
																						"python",
																						"requirements"
																					],
																					"variable": [
																						{
																							"key": "tag"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "[\n  {\n    \"dateCreated\": \"<dateTime>\",\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"packageType\": \"NODE\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"dateCreated\": \"<dateTime>\",\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"packageType\": \"NUGET\",\n    \"version\": \"<string>\"\n  }\n]"
																		},
																		{
																			"name": "Entity not found",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: bearer",
																						"key": "Authorization",
																						"value": "Bearer <token>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "<string>",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/python/requirements",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v1",
																						"catalog",
																						":tag",
																						"packages",
																						"python",
																						"requirements"
																					],
																					"variable": [
																						{
																							"key": "tag"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "pipfile",
															"item": [
																{
																	"name": "[python] Upload pipfile.lock",
																	"request": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "<string>",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/python/pipfile",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":tag",
																				"packages",
																				"python",
																				"pipfile"
																			],
																			"variable": [
																				{
																					"key": "tag",
																					"value": "<string>"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Successfully saved packages",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: bearer",
																						"key": "Authorization",
																						"value": "Bearer <token>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "<string>",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/python/pipfile",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v1",
																						"catalog",
																						":tag",
																						"packages",
																						"python",
																						"pipfile"
																					],
																					"variable": [
																						{
																							"key": "tag"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "[\n  {\n    \"dateCreated\": \"<dateTime>\",\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"packageType\": \"NODE\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"dateCreated\": \"<dateTime>\",\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"packageType\": \"NUGET\",\n    \"version\": \"<string>\"\n  }\n]"
																		},
																		{
																			"name": "Entity not found",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: bearer",
																						"key": "Authorization",
																						"value": "Bearer <token>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "<string>",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/python/pipfile",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v1",
																						"catalog",
																						":tag",
																						"packages",
																						"python",
																						"pipfile"
																					],
																					"variable": [
																						{
																							"key": "tag"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "node",
													"item": [
														{
															"name": "yarn-lock",
															"item": [
																{
																	"name": "[js] Upload yarn.lock",
																	"request": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "<string>",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/node/yarn-lock",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":tag",
																				"packages",
																				"node",
																				"yarn-lock"
																			],
																			"variable": [
																				{
																					"key": "tag",
																					"value": "<string>"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Successfully saved packages",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: bearer",
																						"key": "Authorization",
																						"value": "Bearer <token>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "<string>",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/node/yarn-lock",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v1",
																						"catalog",
																						":tag",
																						"packages",
																						"node",
																						"yarn-lock"
																					],
																					"variable": [
																						{
																							"key": "tag"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "[\n  {\n    \"dateCreated\": \"<dateTime>\",\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"packageType\": \"NODE\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"dateCreated\": \"<dateTime>\",\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"packageType\": \"NUGET\",\n    \"version\": \"<string>\"\n  }\n]"
																		},
																		{
																			"name": "Entity not found",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: bearer",
																						"key": "Authorization",
																						"value": "Bearer <token>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "<string>",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/node/yarn-lock",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v1",
																						"catalog",
																						":tag",
																						"packages",
																						"node",
																						"yarn-lock"
																					],
																					"variable": [
																						{
																							"key": "tag"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "package-lock",
															"item": [
																{
																	"name": "[js] Upload NPM package-lock.json",
																	"request": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "<string>",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/node/package-lock",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":tag",
																				"packages",
																				"node",
																				"package-lock"
																			],
																			"variable": [
																				{
																					"key": "tag",
																					"value": "<string>"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Successfully saved packages",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: bearer",
																						"key": "Authorization",
																						"value": "Bearer <token>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "<string>",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/node/package-lock",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v1",
																						"catalog",
																						":tag",
																						"packages",
																						"node",
																						"package-lock"
																					],
																					"variable": [
																						{
																							"key": "tag"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "[\n  {\n    \"dateCreated\": \"<dateTime>\",\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"packageType\": \"NODE\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"dateCreated\": \"<dateTime>\",\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"packageType\": \"NUGET\",\n    \"version\": \"<string>\"\n  }\n]"
																		},
																		{
																			"name": "Entity not found",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: bearer",
																						"key": "Authorization",
																						"value": "Bearer <token>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "<string>",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/node/package-lock",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v1",
																						"catalog",
																						":tag",
																						"packages",
																						"node",
																						"package-lock"
																					],
																					"variable": [
																						{
																							"key": "tag"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "package-json",
															"item": [
																{
																	"name": "[js] Upload NPM package.json",
																	"request": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "<string>",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/node/package-json",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":tag",
																				"packages",
																				"node",
																				"package-json"
																			],
																			"variable": [
																				{
																					"key": "tag",
																					"value": "<string>"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Successfully saved packages",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: bearer",
																						"key": "Authorization",
																						"value": "Bearer <token>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "<string>",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/node/package-json",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v1",
																						"catalog",
																						":tag",
																						"packages",
																						"node",
																						"package-json"
																					],
																					"variable": [
																						{
																							"key": "tag"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "[\n  {\n    \"dateCreated\": \"<dateTime>\",\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"packageType\": \"NODE\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"dateCreated\": \"<dateTime>\",\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"packageType\": \"NUGET\",\n    \"version\": \"<string>\"\n  }\n]"
																		},
																		{
																			"name": "Entity not found",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: bearer",
																						"key": "Authorization",
																						"value": "Bearer <token>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "<string>",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/node/package-json",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v1",
																						"catalog",
																						":tag",
																						"packages",
																						"node",
																						"package-json"
																					],
																					"variable": [
																						{
																							"key": "tag"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "java",
													"item": [
														{
															"name": "[java] Delete Java package",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/java?name=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"packages",
																		"java"
																	],
																	"query": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "(Required) "
																		}
																	],
																	"variable": [
																		{
																			"key": "tag",
																			"value": "<string>"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Successfully deleted package",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/java?name=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":tag",
																				"packages",
																				"java"
																			],
																			"query": [
																				{
																					"key": "name",
																					"value": "<string>",
																					"description": "(Required) "
																				}
																			],
																			"variable": [
																				{
																					"key": "tag"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Entity not found",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/java?name=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":tag",
																				"packages",
																				"java"
																			],
																			"query": [
																				{
																					"key": "name",
																					"value": "<string>",
																					"description": "(Required) "
																				}
																			],
																			"variable": [
																				{
																					"key": "tag"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "[java] Upload multiple Java packages",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/java",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"packages",
																		"java"
																	],
																	"variable": [
																		{
																			"key": "tag",
																			"value": "<string>"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Successfully saved packages",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/java",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":tag",
																				"packages",
																				"java"
																			],
																			"variable": [
																				{
																					"key": "tag"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"dateCreated\": \"<dateTime>\",\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"packageType\": \"NODE\",\n  \"version\": \"<string>\"\n}"
																},
																{
																	"name": "Entity not found",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/java",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":tag",
																				"packages",
																				"java"
																			],
																			"variable": [
																				{
																					"key": "tag"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "go",
													"item": [
														{
															"name": "gosum",
															"item": [
																{
																	"name": "[golang] Upload go.sum",
																	"request": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "<string>",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/go/gosum",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":tag",
																				"packages",
																				"go",
																				"gosum"
																			],
																			"variable": [
																				{
																					"key": "tag",
																					"value": "<string>"
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "Successfully saved packages",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: bearer",
																						"key": "Authorization",
																						"value": "Bearer <token>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "<string>",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/go/gosum",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v1",
																						"catalog",
																						":tag",
																						"packages",
																						"go",
																						"gosum"
																					],
																					"variable": [
																						{
																							"key": "tag"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "[\n  {\n    \"dateCreated\": \"<dateTime>\",\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"packageType\": \"NODE\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"dateCreated\": \"<dateTime>\",\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"packageType\": \"NUGET\",\n    \"version\": \"<string>\"\n  }\n]"
																		},
																		{
																			"name": "Entity not found",
																			"originalRequest": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"description": "Added as a part of security scheme: bearer",
																						"key": "Authorization",
																						"value": "Bearer <token>"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "<string>",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/go/gosum",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v1",
																						"catalog",
																						":tag",
																						"packages",
																						"go",
																						"gosum"
																					],
																					"variable": [
																						{
																							"key": "tag"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "dotnet",
													"item": [
														{
															"name": "nuget",
															"item": [
																{
																	"name": "packages-lock",
																	"item": [
																		{
																			"name": "[csharp] Upload Nuget packages.lock.json",
																			"request": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "<string>",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/dotnet/nuget/packages-lock",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v1",
																						"catalog",
																						":tag",
																						"packages",
																						"dotnet",
																						"nuget",
																						"packages-lock"
																					],
																					"variable": [
																						{
																							"key": "tag",
																							"value": "<string>"
																						}
																					]
																				}
																			},
																			"response": [
																				{
																					"name": "Successfully saved packages",
																					"originalRequest": {
																						"method": "POST",
																						"header": [
																							{
																								"key": "Content-Type",
																								"value": "application/json"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"description": "Added as a part of security scheme: bearer",
																								"key": "Authorization",
																								"value": "Bearer <token>"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "<string>",
																							"options": {
																								"raw": {
																									"headerFamily": "json",
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/dotnet/nuget/packages-lock",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"api",
																								"v1",
																								"catalog",
																								":tag",
																								"packages",
																								"dotnet",
																								"nuget",
																								"packages-lock"
																							],
																							"variable": [
																								{
																									"key": "tag"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "[\n  {\n    \"dateCreated\": \"<dateTime>\",\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"packageType\": \"NODE\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"dateCreated\": \"<dateTime>\",\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"packageType\": \"NUGET\",\n    \"version\": \"<string>\"\n  }\n]"
																				},
																				{
																					"name": "Entity not found",
																					"originalRequest": {
																						"method": "POST",
																						"header": [
																							{
																								"key": "Content-Type",
																								"value": "application/json"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"description": "Added as a part of security scheme: bearer",
																								"key": "Authorization",
																								"value": "Bearer <token>"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "<string>",
																							"options": {
																								"raw": {
																									"headerFamily": "json",
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/dotnet/nuget/packages-lock",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"api",
																								"v1",
																								"catalog",
																								":tag",
																								"packages",
																								"dotnet",
																								"nuget",
																								"packages-lock"
																							],
																							"variable": [
																								{
																									"key": "tag"
																								}
																							]
																						}
																					},
																					"status": "Not Found",
																					"code": 404,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
																				}
																			]
																		}
																	]
																},
																{
																	"name": "csproj",
																	"item": [
																		{
																			"name": "[csharp] Upload Nuget csproj",
																			"request": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "<string>",
																					"options": {
																						"raw": {
																							"headerFamily": "json",
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/dotnet/nuget/csproj",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"api",
																						"v1",
																						"catalog",
																						":tag",
																						"packages",
																						"dotnet",
																						"nuget",
																						"csproj"
																					],
																					"variable": [
																						{
																							"key": "tag",
																							"value": "<string>"
																						}
																					]
																				}
																			},
																			"response": [
																				{
																					"name": "Successfully saved packages",
																					"originalRequest": {
																						"method": "POST",
																						"header": [
																							{
																								"key": "Content-Type",
																								"value": "application/json"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"description": "Added as a part of security scheme: bearer",
																								"key": "Authorization",
																								"value": "Bearer <token>"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "<string>",
																							"options": {
																								"raw": {
																									"headerFamily": "json",
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/dotnet/nuget/csproj",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"api",
																								"v1",
																								"catalog",
																								":tag",
																								"packages",
																								"dotnet",
																								"nuget",
																								"csproj"
																							],
																							"variable": [
																								{
																									"key": "tag"
																								}
																							]
																						}
																					},
																					"status": "OK",
																					"code": 200,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "[\n  {\n    \"dateCreated\": \"<dateTime>\",\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"packageType\": \"NODE\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"dateCreated\": \"<dateTime>\",\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"packageType\": \"NUGET\",\n    \"version\": \"<string>\"\n  }\n]"
																				},
																				{
																					"name": "Entity not found",
																					"originalRequest": {
																						"method": "POST",
																						"header": [
																							{
																								"key": "Content-Type",
																								"value": "application/json"
																							},
																							{
																								"key": "Accept",
																								"value": "application/json"
																							},
																							{
																								"description": "Added as a part of security scheme: bearer",
																								"key": "Authorization",
																								"value": "Bearer <token>"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "<string>",
																							"options": {
																								"raw": {
																									"headerFamily": "json",
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages/dotnet/nuget/csproj",
																							"host": [
																								"{{baseUrl}}"
																							],
																							"path": [
																								"api",
																								"v1",
																								"catalog",
																								":tag",
																								"packages",
																								"dotnet",
																								"nuget",
																								"csproj"
																							],
																							"variable": [
																								{
																									"key": "tag"
																								}
																							]
																						}
																					},
																					"status": "Not Found",
																					"code": 404,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "application/json"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "List packages",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																":tag",
																"packages"
															],
															"variable": [
																{
																	"key": "tag",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "All packages",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"packages"
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"dateCreated\": \"<dateTime>\",\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"packageType\": \"NODE\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"dateCreated\": \"<dateTime>\",\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"packageType\": \"NUGET\",\n    \"version\": \"<string>\"\n  }\n]"
														},
														{
															"name": "Entity not found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/packages",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"packages"
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "openapi",
											"item": [
												{
													"name": "Retrieve entity descriptor",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/:tag/openapi?yaml=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																":tag",
																"openapi"
															],
															"query": [
																{
																	"key": "yaml",
																	"value": "<boolean>",
																	"description": "When true, returns the YAML representation of the descriptor"
																}
															],
															"variable": [
																{
																	"key": "tag",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully found entity descriptor",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/openapi?yaml=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"openapi"
																	],
																	"query": [
																		{
																			"key": "yaml",
																			"value": "<boolean>",
																			"description": "When true, returns the YAML representation of the descriptor"
																		}
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "<string>"
														},
														{
															"name": "Entity not found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/openapi?yaml=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"openapi"
																	],
																	"query": [
																		{
																			"key": "yaml",
																			"value": "<boolean>",
																			"description": "When true, returns the YAML representation of the descriptor"
																		}
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "groups",
											"item": [
												{
													"name": "Delete groups from entity",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"groups\": [\n    {\n      \"tag\": \"<string>\"\n    },\n    {\n      \"tag\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/:tag/groups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																":tag",
																"groups"
															],
															"variable": [
																{
																	"key": "tag",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully deleted group memberships",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"groups\": [\n    {\n      \"tag\": \"<string>\"\n    },\n    {\n      \"tag\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/groups",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"groups"
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"groups\": [\n    {\n      \"tag\": \"<string>\"\n    },\n    {\n      \"tag\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/groups",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"groups"
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														},
														{
															"name": "Entity not found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"groups\": [\n    {\n      \"tag\": \"<string>\"\n    },\n    {\n      \"tag\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/groups",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"groups"
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Retrieve groups for entity",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/:tag/groups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																":tag",
																"groups"
															],
															"variable": [
																{
																	"key": "tag",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully retrieved groups",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/groups",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"groups"
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"groups\": [\n    {\n      \"tag\": \"<string>\"\n    },\n    {\n      \"tag\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Entity not found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/groups",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"groups"
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Add groups to entity",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"groups\": [\n    {\n      \"tag\": \"<string>\"\n    },\n    {\n      \"tag\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/:tag/groups",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																":tag",
																"groups"
															],
															"variable": [
																{
																	"key": "tag",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully created group memberships",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"groups\": [\n    {\n      \"tag\": \"<string>\"\n    },\n    {\n      \"tag\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/groups",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"groups"
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"groups\": [\n    {\n      \"tag\": \"<string>\"\n    },\n    {\n      \"tag\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"groups\": [\n    {\n      \"tag\": \"<string>\"\n    },\n    {\n      \"tag\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/groups",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"groups"
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														},
														{
															"name": "Entity not found",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"groups\": [\n    {\n      \"tag\": \"<string>\"\n    },\n    {\n      \"tag\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/groups",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"groups"
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "documentation",
											"item": [
												{
													"name": "openapi",
													"item": [
														{
															"name": "Delete OpenAPI docs for entity",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/documentation/openapi",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"documentation",
																		"openapi"
																	],
																	"variable": [
																		{
																			"key": "tag",
																			"value": "<string>"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Successfully deleted documentation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:tag/documentation/openapi",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":tag",
																				"documentation",
																				"openapi"
																			],
																			"variable": [
																				{
																					"key": "tag"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Retrieve OpenAPI docs for entity",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/documentation/openapi",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"documentation",
																		"openapi"
																	],
																	"variable": [
																		{
																			"key": "tag",
																			"value": "<string>"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Successfully found documentation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:tag/documentation/openapi",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":tag",
																				"documentation",
																				"openapi"
																			],
																			"variable": [
																				{
																					"key": "tag"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"spec\": \"<string>\"\n}"
																},
																{
																	"name": "Documentation not found",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:tag/documentation/openapi",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":tag",
																				"documentation",
																				"openapi"
																			],
																			"variable": [
																				{
																					"key": "tag"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Update OpenAPI docs for entity",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"spec\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/documentation/openapi",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"documentation",
																		"openapi"
																	],
																	"variable": [
																		{
																			"key": "tag",
																			"value": "<string>"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Successfully updated documentation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"spec\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:tag/documentation/openapi",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":tag",
																				"documentation",
																				"openapi"
																			],
																			"variable": [
																				{
																					"key": "tag"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"spec\": \"<string>\"\n}"
																},
																{
																	"name": "Invalid request",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"spec\": \"<string>\"\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:tag/documentation/openapi",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":tag",
																				"documentation",
																				"openapi"
																			],
																			"variable": [
																				{
																					"key": "tag"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "deploys",
											"item": [
												{
													"name": "Delete deployments for entity",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/:tag/deploys?environment=<string>&sha=<string>&type=SCALE",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																":tag",
																"deploys"
															],
															"query": [
																{
																	"key": "environment",
																	"value": "<string>"
																},
																{
																	"key": "sha",
																	"value": "<string>"
																},
																{
																	"key": "type",
																	"value": "SCALE"
																}
															],
															"variable": [
																{
																	"key": "tag",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully deleted deployments",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/deploys?environment=<string>&sha=<string>&type=SCALE",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"deploys"
																	],
																	"query": [
																		{
																			"key": "environment",
																			"value": "<string>"
																		},
																		{
																			"key": "sha",
																			"value": "<string>"
																		},
																		{
																			"key": "type",
																			"value": "SCALE"
																		}
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"serviceId\": \"<long>\",\n  \"timestamp\": \"<dateTime>\",\n  \"title\": \"<string>\",\n  \"type\": \"SCALE\",\n  \"customData\": {\n    \"cupidatat_6\": {}\n  },\n  \"deployerEmail\": \"<string>\",\n  \"deployerName\": \"<string>\",\n  \"environment\": \"<string>\",\n  \"id\": \"<long>\",\n  \"sha\": \"<string>\"\n}"
														},
														{
															"name": "Entity not found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/deploys?environment=<string>&sha=<string>&type=SCALE",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"deploys"
																	],
																	"query": [
																		{
																			"key": "environment",
																			"value": "<string>"
																		},
																		{
																			"key": "sha",
																			"value": "<string>"
																		},
																		{
																			"key": "type",
																			"value": "SCALE"
																		}
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "List deployments for entity",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/:tag/deploys",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																":tag",
																"deploys"
															],
															"variable": [
																{
																	"key": "tag",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully retrieved deployments",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/deploys",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"deploys"
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"serviceId\": \"<long>\",\n    \"timestamp\": \"<dateTime>\",\n    \"title\": \"<string>\",\n    \"type\": \"ROLLBACK\",\n    \"customData\": {\n      \"dolored\": {},\n      \"eu_879\": {},\n      \"commodo7dc\": {}\n    },\n    \"deployerEmail\": \"<string>\",\n    \"deployerName\": \"<string>\",\n    \"environment\": \"<string>\",\n    \"id\": \"<long>\",\n    \"sha\": \"<string>\"\n  },\n  {\n    \"serviceId\": \"<long>\",\n    \"timestamp\": \"<dateTime>\",\n    \"title\": \"<string>\",\n    \"type\": \"SCALE\",\n    \"customData\": {\n      \"laborum_7f9\": {}\n    },\n    \"deployerEmail\": \"<string>\",\n    \"deployerName\": \"<string>\",\n    \"environment\": \"<string>\",\n    \"id\": \"<long>\",\n    \"sha\": \"<string>\"\n  }\n]"
														},
														{
															"name": "Entity not found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/deploys",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"deploys"
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Add deployment for entity",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"timestamp\": \"<dateTime>\",\n  \"title\": \"<string>\",\n  \"type\": \"SCALE\",\n  \"customData\": {\n    \"proident1\": {},\n    \"magna_9f\": {},\n    \"occaecat_0\": {},\n    \"sint_8ed\": {}\n  },\n  \"deployer\": {\n    \"email\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"environment\": \"<string>\",\n  \"sha\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/:tag/deploys",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																":tag",
																"deploys"
															],
															"variable": [
																{
																	"key": "tag",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully created deployment",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"timestamp\": \"<dateTime>\",\n  \"title\": \"<string>\",\n  \"type\": \"SCALE\",\n  \"customData\": {\n    \"proident1\": {},\n    \"magna_9f\": {},\n    \"occaecat_0\": {},\n    \"sint_8ed\": {}\n  },\n  \"deployer\": {\n    \"email\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"environment\": \"<string>\",\n  \"sha\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/deploys",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"deploys"
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"serviceId\": \"<long>\",\n  \"timestamp\": \"<dateTime>\",\n  \"title\": \"<string>\",\n  \"type\": \"SCALE\",\n  \"customData\": {\n    \"cupidatat_6\": {}\n  },\n  \"deployerEmail\": \"<string>\",\n  \"deployerName\": \"<string>\",\n  \"environment\": \"<string>\",\n  \"id\": \"<long>\",\n  \"sha\": \"<string>\"\n}"
														},
														{
															"name": "Entity not found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"timestamp\": \"<dateTime>\",\n  \"title\": \"<string>\",\n  \"type\": \"SCALE\",\n  \"customData\": {\n    \"proident1\": {},\n    \"magna_9f\": {},\n    \"occaecat_0\": {},\n    \"sint_8ed\": {}\n  },\n  \"deployer\": {\n    \"email\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"environment\": \"<string>\",\n  \"sha\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/deploys",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"deploys"
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "custom-data",
											"item": [
												{
													"name": "{key}",
													"item": [
														{
															"name": "Retrieve custom data for entity by key",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/custom-data/:key",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"custom-data",
																		":key"
																	],
																	"variable": [
																		{
																			"key": "tag",
																			"value": "<string>"
																		},
																		{
																			"key": "key",
																			"value": "<string>"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Successfully retrieved custom data for key",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:tag/custom-data/:key",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":tag",
																				"custom-data",
																				":key"
																			],
																			"variable": [
																				{
																					"key": "tag"
																				},
																				{
																					"key": "key"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"dateUpdated\": \"<dateTime>\",\n  \"key\": \"<string>\",\n  \"source\": \"YAML\",\n  \"value\": {},\n  \"description\": \"<string>\",\n  \"id\": \"<long>\"\n}"
																},
																{
																	"name": "Custom data not found for given entity and key",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:tag/custom-data/:key",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":tag",
																				"custom-data",
																				":key"
																			],
																			"variable": [
																				{
																					"key": "tag"
																				},
																				{
																					"key": "key"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Delete custom data for entity",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/:tag/custom-data?key=<string>&force=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																":tag",
																"custom-data"
															],
															"query": [
																{
																	"key": "key",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "force",
																	"value": "<boolean>",
																	"description": "When true, overrides values that were defined in the catalog descriptor. Will be overwritten the next time the catalog descriptor is processed."
																}
															],
															"variable": [
																{
																	"key": "tag",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully deleted custom data",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/custom-data?key=<string>&force=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"custom-data"
																	],
																	"query": [
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "force",
																			"value": "<boolean>",
																			"description": "When true, overrides values that were defined in the catalog descriptor. Will be overwritten the next time the catalog descriptor is processed."
																		}
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Entity not found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/custom-data?key=<string>&force=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"custom-data"
																	],
																	"query": [
																		{
																			"key": "key",
																			"value": "<string>",
																			"description": "(Required) "
																		},
																		{
																			"key": "force",
																			"value": "<boolean>",
																			"description": "When true, overrides values that were defined in the catalog descriptor. Will be overwritten the next time the catalog descriptor is processed."
																		}
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "List custom data for entity",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/:tag/custom-data",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																":tag",
																"custom-data"
															],
															"variable": [
																{
																	"key": "tag",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully retrieved custom data",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/custom-data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"custom-data"
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"dateUpdated\": \"<dateTime>\",\n    \"key\": \"<string>\",\n    \"source\": \"INTEGRATION\",\n    \"value\": {},\n    \"description\": \"<string>\",\n    \"id\": \"<long>\"\n  },\n  {\n    \"dateUpdated\": \"<dateTime>\",\n    \"key\": \"<string>\",\n    \"source\": \"YAML\",\n    \"value\": {},\n    \"description\": \"<string>\",\n    \"id\": \"<long>\"\n  }\n]"
														},
														{
															"name": "Entity not found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/custom-data",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"custom-data"
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Add custom data for entity",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"<string>\",\n  \"key\": \"<string>\",\n  \"value\": {\n    \"value\": {}\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/:tag/custom-data?force=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																":tag",
																"custom-data"
															],
															"query": [
																{
																	"key": "force",
																	"value": "<boolean>",
																	"description": "When true, overrides values that were defined in the catalog descriptor. Will be overwritten the next time the catalog descriptor is processed."
																}
															],
															"variable": [
																{
																	"key": "tag",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully created data",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"<string>\",\n  \"key\": \"<string>\",\n  \"value\": {\n    \"value\": {}\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/custom-data?force=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"custom-data"
																	],
																	"query": [
																		{
																			"key": "force",
																			"value": "<boolean>",
																			"description": "When true, overrides values that were defined in the catalog descriptor. Will be overwritten the next time the catalog descriptor is processed."
																		}
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"dateUpdated\": \"<dateTime>\",\n  \"key\": \"<string>\",\n  \"source\": \"YAML\",\n  \"value\": {},\n  \"description\": \"<string>\",\n  \"id\": \"<long>\"\n}"
														},
														{
															"name": "Invalid custom data request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"<string>\",\n  \"key\": \"<string>\",\n  \"value\": {\n    \"value\": {}\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/custom-data?force=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"custom-data"
																	],
																	"query": [
																		{
																			"key": "force",
																			"value": "<boolean>",
																			"description": "When true, overrides values that were defined in the catalog descriptor. Will be overwritten the next time the catalog descriptor is processed."
																		}
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														},
														{
															"name": "Entity not found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"<string>\",\n  \"key\": \"<string>\",\n  \"value\": {\n    \"value\": {}\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:tag/custom-data?force=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":tag",
																		"custom-data"
																	],
																	"query": [
																		{
																			"key": "force",
																			"value": "<boolean>",
																			"description": "When true, overrides values that were defined in the catalog descriptor. Will be overwritten the next time the catalog descriptor is processed."
																		}
																	],
																	"variable": [
																		{
																			"key": "tag"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Delete entity",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/catalog/:tag",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"catalog",
														":tag"
													],
													"variable": [
														{
															"key": "tag",
															"value": "<string>"
														}
													]
												}
											},
											"response": [
												{
													"name": "Successfully deleted entity",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/:tag",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																":tag"
															],
															"variable": [
																{
																	"key": "tag"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Entity not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/:tag",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																":tag"
															],
															"variable": [
																{
																	"key": "tag"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Retrieve entity details",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/catalog/:tag",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"catalog",
														":tag"
													],
													"variable": [
														{
															"key": "tag",
															"value": "<string>"
														}
													]
												}
											},
											"response": [
												{
													"name": "Successfully found entities",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/:tag",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																":tag"
															],
															"variable": [
																{
																	"key": "tag"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ownership\": {\n    \"emails\": [\n      {\n        \"email\": \"<string>\",\n        \"description\": \"<string>\",\n        \"inheritance\": \"NONE\"\n      },\n      {\n        \"email\": \"<string>\",\n        \"description\": \"<string>\",\n        \"inheritance\": \"NONE\"\n      }\n    ],\n    \"slackChannels\": [\n      {\n        \"channel\": \"<string>\",\n        \"description\": \"<string>\",\n        \"inheritance\": \"APPEND\",\n        \"notificationsEnabled\": \"<boolean>\"\n      },\n      {\n        \"channel\": \"<string>\",\n        \"description\": \"<string>\",\n        \"inheritance\": \"FALLBACK\",\n        \"notificationsEnabled\": \"<boolean>\"\n      }\n    ],\n    \"groups\": [\n      {\n        \"description\": \"<string>\",\n        \"groupName\": \"<string>\",\n        \"inheritance\": \"APPEND\",\n        \"provider\": \"GOOGLE\"\n      },\n      {\n        \"description\": \"<string>\",\n        \"groupName\": \"<string>\",\n        \"inheritance\": \"APPEND\",\n        \"provider\": \"OPSGENIE\"\n      }\n    ]\n  },\n  \"definition\": {},\n  \"description\": \"<string>\",\n  \"groups\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"links\": [\n    {\n      \"url\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"url\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": {}\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": {}\n    }\n  ],\n  \"name\": \"<string>\",\n  \"tag\": \"<string>\",\n  \"type\": \"<string>\"\n}"
												},
												{
													"name": "Entity not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/:tag",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																":tag"
															],
															"variable": [
																{
																	"key": "tag"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "{callerTag}",
									"item": [
										{
											"name": "dependencies",
											"item": [
												{
													"name": "{calleeTag}",
													"item": [
														{
															"name": "Delete dependency",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:callerTag/dependencies/:calleeTag?method=<string>&path=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":callerTag",
																		"dependencies",
																		":calleeTag"
																	],
																	"query": [
																		{
																			"key": "method",
																			"value": "<string>"
																		},
																		{
																			"key": "path",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "callerTag",
																			"value": "<string>"
																		},
																		{
																			"key": "calleeTag",
																			"value": "<string>"
																		}
																	]
																},
																"description": "Deletes a single dependency edge between the `caller` and the `callee`. \nNote: This is only supported for edges created via the API."
															},
															"response": [
																{
																	"name": "Successfully deleted dependency",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:callerTag/dependencies/:calleeTag?method=<string>&path=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":callerTag",
																				"dependencies",
																				":calleeTag"
																			],
																			"query": [
																				{
																					"key": "method",
																					"value": "<string>"
																				},
																				{
																					"key": "path",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "callerTag"
																				},
																				{
																					"key": "calleeTag"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"calleeTag\": \"<string>\",\n  \"callerTag\": \"<string>\",\n  \"description\": \"<string>\",\n  \"metadata\": {},\n  \"method\": \"HEAD\",\n  \"path\": \"<string>\"\n}"
																},
																{
																	"name": "Invalid endpoint",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:callerTag/dependencies/:calleeTag?method=<string>&path=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":callerTag",
																				"dependencies",
																				":calleeTag"
																			],
																			"query": [
																				{
																					"key": "method",
																					"value": "<string>"
																				},
																				{
																					"key": "path",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "callerTag"
																				},
																				{
																					"key": "calleeTag"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
																},
																{
																	"name": "Dependency not found",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:callerTag/dependencies/:calleeTag?method=<string>&path=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":callerTag",
																				"dependencies",
																				":calleeTag"
																			],
																			"query": [
																				{
																					"key": "method",
																					"value": "<string>"
																				},
																				{
																					"key": "path",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "callerTag"
																				},
																				{
																					"key": "calleeTag"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Retrieve dependency between entities",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:callerTag/dependencies/:calleeTag?method=<string>&path=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":callerTag",
																		"dependencies",
																		":calleeTag"
																	],
																	"query": [
																		{
																			"key": "method",
																			"value": "<string>"
																		},
																		{
																			"key": "path",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "callerTag",
																			"value": "<string>"
																		},
																		{
																			"key": "calleeTag",
																			"value": "<string>"
																		}
																	]
																},
																"description": "If a dependency exists between the `callee` and the `caller`, returns metadata about the edge."
															},
															"response": [
																{
																	"name": "Successfully found dependency",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:callerTag/dependencies/:calleeTag?method=<string>&path=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":callerTag",
																				"dependencies",
																				":calleeTag"
																			],
																			"query": [
																				{
																					"key": "method",
																					"value": "<string>"
																				},
																				{
																					"key": "path",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "callerTag"
																				},
																				{
																					"key": "calleeTag"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"calleeTag\": \"<string>\",\n  \"callerTag\": \"<string>\",\n  \"description\": \"<string>\",\n  \"metadata\": {},\n  \"method\": \"HEAD\",\n  \"path\": \"<string>\"\n}"
																},
																{
																	"name": "Invalid endpoint",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:callerTag/dependencies/:calleeTag?method=<string>&path=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":callerTag",
																				"dependencies",
																				":calleeTag"
																			],
																			"query": [
																				{
																					"key": "method",
																					"value": "<string>"
																				},
																				{
																					"key": "path",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "callerTag"
																				},
																				{
																					"key": "calleeTag"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
																},
																{
																	"name": "Dependency not found",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:callerTag/dependencies/:calleeTag?method=<string>&path=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":callerTag",
																				"dependencies",
																				":calleeTag"
																			],
																			"query": [
																				{
																					"key": "method",
																					"value": "<string>"
																				},
																				{
																					"key": "path",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "callerTag"
																				},
																				{
																					"key": "calleeTag"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Create dependency from entity",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"<string>\",\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:callerTag/dependencies/:calleeTag?method=<string>&path=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":callerTag",
																		"dependencies",
																		":calleeTag"
																	],
																	"query": [
																		{
																			"key": "method",
																			"value": "<string>",
																			"description": "HTTP Method"
																		},
																		{
																			"key": "path",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "callerTag",
																			"value": "<string>"
																		},
																		{
																			"key": "calleeTag",
																			"value": "<string>"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Successfully created dependency",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"description\": \"<string>\",\n  \"metadata\": {}\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:callerTag/dependencies/:calleeTag?method=<string>&path=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":callerTag",
																				"dependencies",
																				":calleeTag"
																			],
																			"query": [
																				{
																					"key": "method",
																					"value": "<string>",
																					"description": "HTTP Method"
																				},
																				{
																					"key": "path",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "callerTag"
																				},
																				{
																					"key": "calleeTag"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"calleeTag\": \"<string>\",\n  \"callerTag\": \"<string>\",\n  \"description\": \"<string>\",\n  \"metadata\": {},\n  \"method\": \"HEAD\",\n  \"path\": \"<string>\"\n}"
																},
																{
																	"name": "Invalid endpoint",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"description\": \"<string>\",\n  \"metadata\": {}\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:callerTag/dependencies/:calleeTag?method=<string>&path=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":callerTag",
																				"dependencies",
																				":calleeTag"
																			],
																			"query": [
																				{
																					"key": "method",
																					"value": "<string>",
																					"description": "HTTP Method"
																				},
																				{
																					"key": "path",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "callerTag"
																				},
																				{
																					"key": "calleeTag"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
																},
																{
																	"name": "Entity not found",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"description\": \"<string>\",\n  \"metadata\": {}\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:callerTag/dependencies/:calleeTag?method=<string>&path=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":callerTag",
																				"dependencies",
																				":calleeTag"
																			],
																			"query": [
																				{
																					"key": "method",
																					"value": "<string>",
																					"description": "HTTP Method"
																				},
																				{
																					"key": "path",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "callerTag"
																				},
																				{
																					"key": "calleeTag"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
																}
															]
														},
														{
															"name": "Update dependency between entities",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"<string>\",\n  \"metadata\": {}\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:callerTag/dependencies/:calleeTag?method=<string>&path=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":callerTag",
																		"dependencies",
																		":calleeTag"
																	],
																	"query": [
																		{
																			"key": "method",
																			"value": "<string>"
																		},
																		{
																			"key": "path",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "callerTag",
																			"value": "<string>"
																		},
																		{
																			"key": "calleeTag",
																			"value": "<string>"
																		}
																	]
																},
																"description": "If a dependency exists between two entities, replace the metadata with the payload. \nNote: This only supports dependencies created via the API."
															},
															"response": [
																{
																	"name": "Successfully updated dependency",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"description\": \"<string>\",\n  \"metadata\": {}\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:callerTag/dependencies/:calleeTag?method=<string>&path=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":callerTag",
																				"dependencies",
																				":calleeTag"
																			],
																			"query": [
																				{
																					"key": "method",
																					"value": "<string>"
																				},
																				{
																					"key": "path",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "callerTag"
																				},
																				{
																					"key": "calleeTag"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"calleeTag\": \"<string>\",\n  \"callerTag\": \"<string>\",\n  \"description\": \"<string>\",\n  \"metadata\": {},\n  \"method\": \"HEAD\",\n  \"path\": \"<string>\"\n}"
																},
																{
																	"name": "Invalid endpoint",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"description\": \"<string>\",\n  \"metadata\": {}\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:callerTag/dependencies/:calleeTag?method=<string>&path=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":callerTag",
																				"dependencies",
																				":calleeTag"
																			],
																			"query": [
																				{
																					"key": "method",
																					"value": "<string>"
																				},
																				{
																					"key": "path",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "callerTag"
																				},
																				{
																					"key": "calleeTag"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
																},
																{
																	"name": "Entity not found",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"description": "Added as a part of security scheme: bearer",
																				"key": "Authorization",
																				"value": "Bearer <token>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"description\": \"<string>\",\n  \"metadata\": {}\n}",
																			"options": {
																				"raw": {
																					"headerFamily": "json",
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/v1/catalog/:callerTag/dependencies/:calleeTag?method=<string>&path=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"v1",
																				"catalog",
																				":callerTag",
																				"dependencies",
																				":calleeTag"
																			],
																			"query": [
																				{
																					"key": "method",
																					"value": "<string>"
																				},
																				{
																					"key": "path",
																					"value": "<string>"
																				}
																			],
																			"variable": [
																				{
																					"key": "callerTag"
																				},
																				{
																					"key": "calleeTag"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Delete dependencies from entity",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/:callerTag/dependencies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																":callerTag",
																"dependencies"
															],
															"variable": [
																{
																	"key": "callerTag",
																	"value": "<string>"
																}
															]
														},
														"description": "Deletes any outgoing dependencies from the entity. Note: this only deletes dependencies that were created via the API."
													},
													"response": [
														{
															"name": "Successfully deleted dependencies",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:callerTag/dependencies",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":callerTag",
																		"dependencies"
																	],
																	"variable": [
																		{
																			"key": "callerTag"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"calleeTag\": \"<string>\",\n  \"callerTag\": \"<string>\",\n  \"description\": \"<string>\",\n  \"metadata\": {},\n  \"method\": \"HEAD\",\n  \"path\": \"<string>\"\n}"
														},
														{
															"name": "Caller not found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:callerTag/dependencies",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":callerTag",
																		"dependencies"
																	],
																	"variable": [
																		{
																			"key": "callerTag"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Retrieve all dependencies for an entity",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/:callerTag/dependencies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																":callerTag",
																"dependencies"
															],
															"variable": [
																{
																	"key": "callerTag",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully found entity dependencies",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:callerTag/dependencies",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":callerTag",
																		"dependencies"
																	],
																	"variable": [
																		{
																			"key": "callerTag"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"calleeTag\": \"<string>\",\n  \"callerTag\": \"<string>\",\n  \"description\": \"<string>\",\n  \"metadata\": {},\n  \"method\": \"HEAD\",\n  \"path\": \"<string>\"\n}"
														},
														{
															"name": "Entity dependencies not found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/:callerTag/dependencies",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		":callerTag",
																		"dependencies"
																	],
																	"variable": [
																		{
																			"key": "callerTag"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "deploys",
									"item": [
										{
											"name": "all",
											"item": [
												{
													"name": "Delete all deployments for all entities",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/deploys/all",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																"deploys",
																"all"
															]
														},
														"description": "Dangerous endpoint that blows away deploys for all entities"
													},
													"response": [
														{
															"name": "Successfully deleted all deployments",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/deploys/all",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		"deploys",
																		"all"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "{\n  \"deploys\": [\n    {\n      \"type\": \"ROLLBACK\",\n      \"customData\": {\n        \"ut948\": {},\n        \"non_f1\": {}\n      },\n      \"deployerEmail\": \"<string>\",\n      \"deployerName\": \"<string>\",\n      \"environment\": \"<string>\",\n      \"sha\": \"<string>\",\n      \"timestamp\": \"<dateTime>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"type\": \"ROLLBACK\",\n      \"customData\": {\n        \"Ut3\": {}\n      },\n      \"deployerEmail\": \"<string>\",\n      \"deployerName\": \"<string>\",\n      \"environment\": \"<string>\",\n      \"sha\": \"<string>\",\n      \"timestamp\": \"<dateTime>\",\n      \"title\": \"<string>\"\n    }\n  ]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/deploys/all",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		"deploys",
																		"all"
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Delete deploys by filter",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/catalog/deploys?environment=<string>&sha=<string>&type=SCALE",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"catalog",
														"deploys"
													],
													"query": [
														{
															"key": "environment",
															"value": "<string>"
														},
														{
															"key": "sha",
															"value": "<string>"
														},
														{
															"key": "type",
															"value": "SCALE"
														}
													]
												},
												"description": "Filter and delete deploys by SHA hash, environment, or type. Note that at least one of the filters need to be set.\nIf looking to delete all deployments for an entity, use the `Delete all deploys for entity` endpoint instead."
											},
											"response": [
												{
													"name": "Successfully deleted deployment",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/deploys?environment=<string>&sha=<string>&type=SCALE",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																"deploys"
															],
															"query": [
																{
																	"key": "environment",
																	"value": "<string>"
																},
																{
																	"key": "sha",
																	"value": "<string>"
																},
																{
																	"key": "type",
																	"value": "SCALE"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"deploys\": [\n    {\n      \"type\": \"ROLLBACK\",\n      \"customData\": {\n        \"ut948\": {},\n        \"non_f1\": {}\n      },\n      \"deployerEmail\": \"<string>\",\n      \"deployerName\": \"<string>\",\n      \"environment\": \"<string>\",\n      \"sha\": \"<string>\",\n      \"timestamp\": \"<dateTime>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"type\": \"ROLLBACK\",\n      \"customData\": {\n        \"Ut3\": {}\n      },\n      \"deployerEmail\": \"<string>\",\n      \"deployerName\": \"<string>\",\n      \"environment\": \"<string>\",\n      \"sha\": \"<string>\",\n      \"timestamp\": \"<dateTime>\",\n      \"title\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "Trying to delete deploys without any filters",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/deploys?environment=<string>&sha=<string>&type=SCALE",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																"deploys"
															],
															"query": [
																{
																	"key": "environment",
																	"value": "<string>"
																},
																{
																	"key": "sha",
																	"value": "<string>"
																},
																{
																	"key": "type",
																	"value": "SCALE"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "dependencies",
									"item": [
										{
											"name": "Delete dependencies in bulk",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"values\": {\n    \"cillum78a\": [\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      },\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      }\n    ],\n    \"eu_24\": [\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      },\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/catalog/dependencies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"catalog",
														"dependencies"
													]
												}
											},
											"response": [
												{
													"name": "Successfully deleted dependencies",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"values\": {\n    \"cillum78a\": [\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      },\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      }\n    ],\n    \"eu_24\": [\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      },\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/dependencies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																"dependencies"
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Cannot modify dependency that is defined in cortex.yaml",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"values\": {\n    \"cillum78a\": [\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      },\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      }\n    ],\n    \"eu_24\": [\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      },\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/dependencies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																"dependencies"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												},
												{
													"name": "Entity not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"values\": {\n    \"cillum78a\": [\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      },\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      }\n    ],\n    \"eu_24\": [\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      },\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/dependencies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																"dependencies"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Create or update dependencies in bulk",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"values\": {\n    \"cillum78a\": [\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      },\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      }\n    ],\n    \"eu_24\": [\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      },\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/catalog/dependencies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"catalog",
														"dependencies"
													]
												},
												"description": "This API allows you to create multiple dependencies for multiple entities at once."
											},
											"response": [
												{
													"name": "Successfully created / updated dependencies",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"values\": {\n    \"cillum78a\": [\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      },\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      }\n    ],\n    \"eu_24\": [\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      },\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/dependencies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																"dependencies"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"values\": {\n    \"do5\": [\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"PUT\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      },\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"GET\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      }\n    ]\n  }\n}"
												},
												{
													"name": "Cannot modify dependency that is defined in cortex.yaml",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"values\": {\n    \"cillum78a\": [\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      },\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      }\n    ],\n    \"eu_24\": [\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      },\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/dependencies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																"dependencies"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												},
												{
													"name": "Entity not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"values\": {\n    \"cillum78a\": [\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      },\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      }\n    ],\n    \"eu_24\": [\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      },\n      {\n        \"description\": \"<string>\",\n        \"metadata\": {},\n        \"method\": \"<string>\",\n        \"path\": \"<string>\",\n        \"tag\": \"<string>\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/dependencies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																"dependencies"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "definitions",
									"item": [
										{
											"name": "{type}",
											"item": [
												{
													"name": "Delete definition",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/definitions/:type",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																"definitions",
																":type"
															],
															"variable": [
																{
																	"key": "type",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully deleted definition",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/definitions/:type",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		"definitions",
																		":type"
																	],
																	"variable": [
																		{
																			"key": "type"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Resource definition not found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/definitions/:type",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		"definitions",
																		":type"
																	],
																	"variable": [
																		{
																			"key": "type"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Retrieve definition",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/definitions/:type",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																"definitions",
																":type"
															],
															"variable": [
																{
																	"key": "type",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully found definition",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/definitions/:type",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		"definitions",
																		":type"
																	],
																	"variable": [
																		{
																			"key": "type"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"schema\": {},\n  \"source\": \"CUSTOM\",\n  \"type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														},
														{
															"name": "Resource definition not found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/definitions/:type",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		"definitions",
																		":type"
																	],
																	"variable": [
																		{
																			"key": "type"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Update definition",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"schema\": {},\n  \"description\": \"<string>\",\n  \"name\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/definitions/:type?force=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																"definitions",
																":type"
															],
															"query": [
																{
																	"key": "force",
																	"value": "<boolean>",
																	"description": "When true, schema will be updated even if it results in broken schemas for existing resources"
																}
															],
															"variable": [
																{
																	"key": "type",
																	"value": "<string>"
																}
															]
														}
													},
													"response": [
														{
															"name": "Successfully updated definition schema",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"schema\": {},\n  \"description\": \"<string>\",\n  \"name\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/definitions/:type?force=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		"definitions",
																		":type"
																	],
																	"query": [
																		{
																			"key": "force",
																			"value": "<boolean>",
																			"description": "When true, schema will be updated even if it results in broken schemas for existing resources"
																		}
																	],
																	"variable": [
																		{
																			"key": "type"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"schema\": {},\n  \"source\": \"CUSTOM\",\n  \"type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"name\": \"<string>\"\n}"
														},
														{
															"name": "Failed to update resource definition",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"schema\": {},\n  \"description\": \"<string>\",\n  \"name\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/definitions/:type?force=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		"definitions",
																		":type"
																	],
																	"query": [
																		{
																			"key": "force",
																			"value": "<boolean>",
																			"description": "When true, schema will be updated even if it results in broken schemas for existing resources"
																		}
																	],
																	"variable": [
																		{
																			"key": "type"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														},
														{
															"name": "Resource definition not found",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"schema\": {},\n  \"description\": \"<string>\",\n  \"name\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/v1/catalog/definitions/:type?force=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"v1",
																		"catalog",
																		"definitions",
																		":type"
																	],
																	"query": [
																		{
																			"key": "force",
																			"value": "<boolean>",
																			"description": "When true, schema will be updated even if it results in broken schemas for existing resources"
																		}
																	],
																	"variable": [
																		{
																			"key": "type"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "List definitions",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/catalog/definitions?includeBuiltIn=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"catalog",
														"definitions"
													],
													"query": [
														{
															"key": "includeBuiltIn",
															"value": "<boolean>",
															"description": "When true, returns the built in resource types that Cortex provides, such as `rds`"
														}
													]
												}
											},
											"response": [
												{
													"name": "Successfully found resource definitions",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/definitions?includeBuiltIn=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																"definitions"
															],
															"query": [
																{
																	"key": "includeBuiltIn",
																	"value": "<boolean>",
																	"description": "When true, returns the built in resource types that Cortex provides, such as `rds`"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"definitions\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"required\": [\n        \"schema\",\n        \"source\",\n        \"type\"\n      ],\n      \"type\": \"object\",\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\",\n          \"default\": \"<string>\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"default\": \"<string>\"\n        },\n        \"schema\": {\n          \"type\": \"object\",\n          \"properties\": {}\n        },\n        \"source\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"CORTEX\",\n            \"CUSTOM\"\n          ]\n        },\n        \"type\": {\n          \"type\": \"string\",\n          \"default\": \"<string>\"\n        }\n      }\n    },\n    \"maxItems\": 2\n  }\n}"
												}
											]
										},
										{
											"name": "Create definition",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"schema\": {},\n  \"type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/catalog/definitions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"catalog",
														"definitions"
													]
												}
											},
											"response": [
												{
													"name": "Successfully created definition schema",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"schema\": {},\n  \"type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"name\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/definitions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																"definitions"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"schema\": {},\n  \"source\": \"CUSTOM\",\n  \"type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"name\": \"<string>\"\n}"
												},
												{
													"name": "Failed to create resource definition",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"schema\": {},\n  \"type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"name\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/definitions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																"definitions"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "custom-data",
									"item": [
										{
											"name": "Delete custom data by key for entity",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/catalog/custom-data?tag=<string>&key=<string>&force=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"catalog",
														"custom-data"
													],
													"query": [
														{
															"key": "tag",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "force",
															"value": "<boolean>"
														}
													]
												},
												"description": "Use this endpoint when attempting to delete custom data where the key contains non-alphanumeric characters. Otherwise, use the standard API under `Custom Data`."
											},
											"response": [
												{
													"name": "Successfully deleted custom data",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/custom-data?tag=<string>&key=<string>&force=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																"custom-data"
															],
															"query": [
																{
																	"key": "tag",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "key",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "force",
																	"value": "<boolean>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Entity not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/custom-data?tag=<string>&key=<string>&force=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																"custom-data"
															],
															"query": [
																{
																	"key": "tag",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "key",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "force",
																	"value": "<boolean>"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Retrieve custom data for entity",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/catalog/custom-data?tag=<string>&key=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"catalog",
														"custom-data"
													],
													"query": [
														{
															"key": "tag",
															"value": "<string>",
															"description": "(Required) Entity tag (x-cortex-tag), supports non-alphanumeric characters"
														},
														{
															"key": "key",
															"value": "<string>",
															"description": "When set, returns the entity's value at this key. Otherwise, returns all custom data key/values for the entity."
														}
													]
												},
												"description": "Use this endpoint when attempting to delete custom data where the key contains non-alphanumeric characters. Otherwise, use the standard API under `Custom Data`."
											},
											"response": [
												{
													"name": "Successfully retrieved custom data",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/custom-data?tag=<string>&key=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																"custom-data"
															],
															"query": [
																{
																	"key": "tag",
																	"value": "<string>",
																	"description": "(Required) Entity tag (x-cortex-tag), supports non-alphanumeric characters"
																},
																{
																	"key": "key",
																	"value": "<string>",
																	"description": "When set, returns the entity's value at this key. Otherwise, returns all custom data key/values for the entity."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"dateUpdated\": \"<dateTime>\",\n    \"key\": \"<string>\",\n    \"source\": \"INTEGRATION\",\n    \"value\": {},\n    \"description\": \"<string>\",\n    \"id\": \"<long>\"\n  },\n  {\n    \"dateUpdated\": \"<dateTime>\",\n    \"key\": \"<string>\",\n    \"source\": \"YAML\",\n    \"value\": {},\n    \"description\": \"<string>\",\n    \"id\": \"<long>\"\n  }\n]"
												},
												{
													"name": "Entity not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/custom-data?tag=<string>&key=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																"custom-data"
															],
															"query": [
																{
																	"key": "tag",
																	"value": "<string>",
																	"description": "(Required) Entity tag (x-cortex-tag), supports non-alphanumeric characters"
																},
																{
																	"key": "key",
																	"value": "<string>",
																	"description": "When set, returns the entity's value at this key. Otherwise, returns all custom data key/values for the entity."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Add custom data for entity",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"<string>\",\n  \"key\": \"<string>\",\n  \"value\": {\n    \"value\": {}\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/catalog/custom-data?tag=<string>&force=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"catalog",
														"custom-data"
													],
													"query": [
														{
															"key": "tag",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "force",
															"value": "<boolean>",
															"description": "When true, overrides values that were defined in the catalog descriptor. Will be overwritten the next time the catalog descriptor is processed."
														}
													]
												}
											},
											"response": [
												{
													"name": "Successfully created data",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"<string>\",\n  \"key\": \"<string>\",\n  \"value\": {\n    \"value\": {}\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/custom-data?tag=<string>&force=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																"custom-data"
															],
															"query": [
																{
																	"key": "tag",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "force",
																	"value": "<boolean>",
																	"description": "When true, overrides values that were defined in the catalog descriptor. Will be overwritten the next time the catalog descriptor is processed."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"dateUpdated\": \"<dateTime>\",\n  \"key\": \"<string>\",\n  \"source\": \"YAML\",\n  \"value\": {},\n  \"description\": \"<string>\",\n  \"id\": \"<long>\"\n}"
												},
												{
													"name": "Invalid custom data request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"<string>\",\n  \"key\": \"<string>\",\n  \"value\": {\n    \"value\": {}\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/custom-data?tag=<string>&force=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																"custom-data"
															],
															"query": [
																{
																	"key": "tag",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "force",
																	"value": "<boolean>",
																	"description": "When true, overrides values that were defined in the catalog descriptor. Will be overwritten the next time the catalog descriptor is processed."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												},
												{
													"name": "Entity not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"<string>\",\n  \"key\": \"<string>\",\n  \"value\": {\n    \"value\": {}\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/custom-data?tag=<string>&force=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																"custom-data"
															],
															"query": [
																{
																	"key": "tag",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "force",
																	"value": "<boolean>",
																	"description": "When true, overrides values that were defined in the catalog descriptor. Will be overwritten the next time the catalog descriptor is processed."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Add custom data in bulk",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"values\": {\n    \"voluptatee\": [\n      {\n        \"description\": \"<string>\",\n        \"key\": \"<string>\",\n        \"value\": {\n          \"value\": {}\n        }\n      },\n      {\n        \"description\": \"<string>\",\n        \"key\": \"<string>\",\n        \"value\": {\n          \"value\": {}\n        }\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/catalog/custom-data?force=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"catalog",
														"custom-data"
													],
													"query": [
														{
															"key": "force",
															"value": "<boolean>",
															"description": "When true, overrides values that were defined in the catalog descriptor. Will be overwritten the next time the catalog descriptor is processed."
														}
													]
												},
												"description": "Add multiple key/values of custom data to multiple entities"
											},
											"response": [
												{
													"name": "Successfully created/updated custom data",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"values\": {\n    \"voluptatee\": [\n      {\n        \"description\": \"<string>\",\n        \"key\": \"<string>\",\n        \"value\": {\n          \"value\": {}\n        }\n      },\n      {\n        \"description\": \"<string>\",\n        \"key\": \"<string>\",\n        \"value\": {\n          \"value\": {}\n        }\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/catalog/custom-data?force=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"catalog",
																"custom-data"
															],
															"query": [
																{
																	"key": "force",
																	"value": "<boolean>",
																	"description": "When true, overrides values that were defined in the catalog descriptor. Will be overwritten the next time the catalog descriptor is processed."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"values\": [\n    {\n      \"dateUpdated\": \"<dateTime>\",\n      \"key\": \"<string>\",\n      \"source\": \"YAML\",\n      \"value\": {},\n      \"description\": \"<string>\",\n      \"id\": \"<long>\"\n    },\n    {\n      \"dateUpdated\": \"<dateTime>\",\n      \"key\": \"<string>\",\n      \"source\": \"API\",\n      \"value\": {},\n      \"description\": \"<string>\",\n      \"id\": \"<long>\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Delete entities by type",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/catalog?types=<string>&types=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"catalog"
											],
											"query": [
												{
													"key": "types",
													"value": "<string>",
													"description": "(Required) A list of entity types to delete"
												},
												{
													"key": "types",
													"value": "<string>",
													"description": "(Required) A list of entity types to delete"
												}
											]
										},
										"description": "Note: Dangerous operation that will delete all entities that are of the given type"
									},
									"response": [
										{
											"name": "Successfully deleted entities",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/catalog?types=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"catalog"
													],
													"query": [
														{
															"key": "types",
															"value": "<string>",
															"description": "(Required) A list of entity types to delete"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid filters",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/catalog?types=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"catalog"
													],
													"query": [
														{
															"key": "types",
															"value": "<string>",
															"description": "(Required) A list of entity types to delete"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "List entities",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/catalog",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"catalog"
											]
										},
										"description": "List all entities across the Service, Resource and Domain Catalogs.\n\nThis API returns summary data for each entity, so refer to the retrieve entity method to lookup more details for a single entity."
									},
									"response": [
										{
											"name": "Successfully found entities",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/catalog",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"catalog"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"entities\": [\n    {\n      \"description\": \"<string>\",\n      \"name\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"description\": \"<string>\",\n      \"name\": \"<string>\",\n      \"tag\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "Invalid filters",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/catalog",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"catalog"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"type\": \"ILLEGAL_ARGUMENT_ERROR\",\n  \"details\": \"<string>\",\n  \"gatewayHttpStatus\": \"<integer>\",\n  \"httpStatus\": \"<integer>\",\n  \"requestId\": \"<string>\"\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearerToken}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.getcortexapp.com"
		}
	]
}